{"version":3,"sources":["services/utilService.js","services/taskService.js","services/groupService.js","services/httpService.js","services/boardService.js","services/socketService.js","store/actions/boardAction.js","services/userService.js","store/actions/userAction.js","cmps/task/TaskAdd.jsx","assets/icons/chat.svg","cmps/group/ColorCmp.jsx","cmps/task/columns/TaskPropertyModal.jsx","cmps/task/columns/DateRange.jsx","cmps/task/columns/Notes.jsx","cmps/task/columns/TaskMembers.jsx","cmps/task/comment/CommentPreview.jsx","cmps/task/comment/CommentList.jsx","services/cloudinaryService.js","cmps/task/TaskDetails.jsx","cmps/DeleteModalTask.jsx","cmps/task/TaskPreview.jsx","cmps/task/TaskList.jsx","cmps/DeleteModalGroup.jsx","cmps/group/GroupEdit.jsx","cmps/group/GroupProgressBar.jsx","cmps/group/GroupPreview.jsx","cmps/group/GroupList.jsx","cmps/group/FilterModal.jsx","cmps/group/GroupFilter.jsx","cmps/board/BoardDetails.jsx","cmps/board/BoardFilter.jsx","cmps/board/BoardSideNavModal.jsx","cmps/DeleteModalBoard.jsx","cmps/board/BoardPreview.jsx","cmps/board/BoardList.jsx","cmps/board/BoardSideNav.jsx","cmps/notification/NotificationPreview.jsx","cmps/notification/NotificationList.jsx","cmps/notification/NotificationModal.jsx","assets/styles/logo/logo.png","cmps/AppHeader.jsx","pages/BoardApp.jsx","pages/Home.jsx","cmps/TaskToWeek.jsx","cmps/ListMyWeek.jsx","assets/icons/calendar.png","pages/MyWeek.jsx","pages/Profile.jsx","pages/Login.jsx","App.jsx","serviceWorkerRegistration.js","store/reducers/boardReducer.js","store/reducers/userReducer.js","store/store.js","index.js"],"names":["utilService","getRandomInt","makeId","length","text","possible","i","charAt","Math","floor","random","getRandomColor","num","min","max","ceil","taskService","add","txt","board","groupId","newTask","createTask","updatedBoard","groups","find","currGroup","id","tasks","push","remove","group","filteredTasks","filter","task","update","taskIdx","findIndex","currTask","getById","addComment","comment","updatedTask","createdAt","Date","now","comments","unshift","removeMember","memberId","members","member","_id","addMember","name","tags","updatedAt","status","priority","note","dateRange","startDate","endDate","by","fullname","imgUrl","groupService","createGroup","updatedGroups","groupIdx","color","BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","res","console","log","dir","response","boardService","query","updateBoards","boards","map","boardId","boardName","_createBoard","savedBoard","desc","creator","socketService","socket","setup","io","on","eventName","cb","off","emit","terminate","createSocketService","loadBoards","dispatch","type","err","window","userService","login","logout","signup","getUsers","userId","getLoggedinUser","increaseScore","addNotification","user","_saveLocalUser","score","userCred","sessionStorage","clear","setItem","JSON","stringify","parse","getItem","notification","notifications","TaskAdd","state","handleChange","ev","target","value","setState","onAddTask","preventDefault","taskName","props","this","onSubmit","autoComplete","className","placeholder","onChange","Component","ColorCmp","changeColor","togglePallete","style","opacity","onClick","TaskPropertyModal","labelToAdd","copy","onColorChange","stopPropagation","onAddLabel","pass","options","handleModalChange","onRemoveLabel","findLabel","option","idx","backgroundColor","Delete","cursor","borderLeftColor","hidden","dateFormat","require","DateRange","isOpen","timeline","workingDays","barWidth","barColor","toggleDatePicker","handleSelect","ranges","onUpdateTask","rangeCopy","selection","calcBarWidth","showTimeline","start","end","totalTime","getTime","selectionRange","key","width","Notes","isEditable","onSave","handleNoteChange","closeModal","cols","rows","autoFocus","onKeyDown","TaskMembers","toggleMemebers","renderTaskMembers","Avatar","alt","src","renderBoardMembers","taskMembers","boardMembers","boardMember","taskMember","onAddMember","onRemoveMember","AvatarGroup","display","CommentPreview","toLocaleTimeString","CommentList","cloudinaryService","uploadImg","UPLOAD_URL","formData","FormData","append","files","fetch","body","json","TaskDetails","clickedInput","onUpload","img","prevState","toggleShowTextArea","onSubmitComment","onAddComment","commentCopy","loggedInUser","onFocus","required","Button","variant","DeleteModalTask","onRemove","onCloseModalDelete","TaskPreview","editMode","isShownDetails","isShownMembers","isModalShown","isStatusClicked","isPriorityClicked","isModalDeleteShown","isOver","toggleEditMode","toggleShowDetails","toggleHoverMouse","toggleUnHoverMouse","toggleShowModal","field","taskCopy","onChangeDate","date","onToggleDelete","closeDetails","label","activeBoard","found","forEach","getPropColor","byUser","content","onRemoveTask","provided","borderLeft","dragHandleProps","onBlur","chat","onMouseEnter","onMouseOut","TaskList","onUpdateUser","droppableId","droppableProps","ref","innerRef","index","draggableId","draggableProps","DeleteModalGroup","onRemoveGroup","GroupEdit","showPallete","chosenColor","toggleModal","onUpdateGroup","copyGroup","onOpenModalDelete","Fragment","ColorLens","GroupProgressBar","priorityCounter","statusCounter","data-title","toFixed","GroupPreview","showModal","handleDragEnd","ExpandMore","fontWeight","contentEditable","updatedGroup","innerText","suppressContentEditableWarning","blur","GroupList","onDragEnd","FilterModal","filterBy","groupName","filterGroup","getGroupsForDisplay","background","GroupFilter","isSearching","toggleSearch","toggleFilter","isFilterShow","_BoardDetails","groupsForDisplay","setUpListeners","loadActiveBoard","match","params","loadBoard","taskId","updateBoard","onAddGroup","onUpdateBoardName","onUpdateBoardDesc","description","source","destination","newGroups","_reorder","newTasks","sourceGroup","destinationGroup","sourceGroupIdx","sourceGroupItems","Array","from","splice","transferedItem","destinationGroupIdx","destinationGroupItems","list","sourceIdx","destIdx","items","removedItem","updateGroups","regex","RegExp","test","newGroup","some","_filterByType","prevProps","history","mapDispatchToProps","updateUser","loginUser","BoardDetails","connect","boardReducer","userReducer","BoardFilter","getBoradsForDisplay","Input","BoardSideNavModal","DeleteModalBoard","BoardPreview","to","BoardList","BoardSideNav","isBarShown","isInputShown","nameNewBoard","toggleShownBar","toggleInput","handelChange","addBoard","onAdd","AddCircleOutlineRounded","NotificationPreview","NotificationList","NotificationModal","_AppHeader","isNotificationModalShown","isNewNotification","isHamburgerOpen","toggleHamburger","copyNotifications","logo","title","AppsOutlined","NotificationsNone","EventNoteOutlined","ExitToAppOutlined","GitHub","LinkedIn","AppHeader","_BoardApp","boardsForDisplay","isLoading","removeBoard","setTimeout","height","autoPlay","loop","preload","path","component","BoardApp","_Home","setLoader","runDemo","isAdmin","username","email","phoneNumber","birthday","company","Home","TaskToWeek","userActive","userTasks","findTasksPerUser","changeDate","ListMyWeek","_MyWeek","isTaskShown","toggleTasksMode","getBoardsForDisplay","boardForDisplay","Calendar","MyWeek","Profile","initials","loadUser","getInitials","names","split","toUpperCase","Person","Mail","Phone","Cake","Work","_Login","isNewUser","msg","loggedinUser","loginCred","password","signupCred","loginHandleChange","signupHandleChange","doLogin","userCreds","doSignup","signupCreds","newUser","lastAns","loginSection","href","signupSection","Login","App","Boolean","location","hostname","initialState","localLoggedinUser","users","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cb52a82d.chunk.js","sourcesContent":["export const utilService = {\r\n    getRandomInt,\r\n    makeId,\r\n    getRandomColor\r\n}\r\n\r\n\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nfunction makeId(length = 5) {\r\n    var text = \"\";\r\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return text;\r\n}\r\n\r\nfunction getRandomColor() {\r\n    var colors = ['#00ca71', '#0085ff', '#fdab3d', '#e44258']\r\n    var num = getRandomInt(0, 4)\r\n    return colors[num]\r\n\r\n}\r\n\r\n","import { utilService } from './utilService';\r\n\r\n\r\nexport const taskService = {\r\n    add,\r\n    remove,\r\n    createTask,\r\n    update,\r\n    getById,\r\n    addComment,\r\n    removeMember,\r\n    addMember\r\n}\r\n\r\nfunction add(txt, board, groupId) {\r\n    const newTask = createTask(txt)\r\n    const updatedBoard = { ...board }\r\n    updatedBoard.groups.find(currGroup => currGroup.id === groupId)\r\n        .tasks.push(newTask)\r\n    return updatedBoard\r\n\r\n\r\n}\r\n\r\nfunction update(task, board, groupId) {\r\n    const updatedBoard = { ...board }\r\n    const currGroup = updatedBoard.groups.find(currGroup => currGroup.id === groupId)\r\n    const taskIdx = currGroup.tasks.findIndex(currTask => currTask.id === task.id)\r\n    currGroup.tasks[taskIdx] = { ...task }\r\n    return updatedBoard\r\n\r\n}\r\n\r\nfunction remove(id, board, group) {\r\n    const filteredTasks = group.tasks.filter(task => task.id !== id)\r\n    const updatedBoard = { ...board }\r\n    updatedBoard.groups.find(currGroup => currGroup.id === group.id)\r\n        .tasks = [...filteredTasks]\r\n    return updatedBoard\r\n}\r\n\r\nfunction getById(task, group) {\r\n    const foundTask = group.tasks.find(currTask => currTask.id === task.id);\r\n    return foundTask;\r\n}\r\n\r\nfunction addComment(comment, task) {\r\n    const updatedTask = { ...task }\r\n    comment.createdAt = Date.now()\r\n    updatedTask.comments.unshift(comment)\r\n    return updatedTask\r\n\r\n}\r\n\r\nfunction removeMember(task, memberId) {\r\n    const updatedTask = { ...task }\r\n    updatedTask.members = updatedTask.members.filter(member => member._id !== memberId)\r\n    return updatedTask\r\n}\r\n\r\nfunction addMember(task, member) {\r\n    const updatedTask = { ...task }\r\n    updatedTask.members.push(member)\r\n    return updatedTask\r\n}\r\n\r\nfunction createTask(txt) {\r\n    return {\r\n        id: utilService.makeId(),\r\n        name: txt,\r\n        tags: [\r\n            \"demo\",\r\n            \"instructions\",\r\n            \"tutorial\"\r\n        ],\r\n        createdAt: 1606733763732,\r\n        updatedAt: 1606733763732,\r\n        members: [],\r\n        status: \"New\",\r\n        priority: \"Low\",\r\n        note: \"Add notes to your task\",\r\n        dateRange: {\r\n            startDate: new Date(),\r\n            endDate: new Date()\r\n        },\r\n        comments: [\r\n            {\r\n                by: {\r\n                    _id: \"600877404b50bc8b342c1732\",\r\n                    fullname: \"Tair Bitan\",\r\n                    imgUrl: \"https://res.cloudinary.com/tair/image/upload/v1611221821/Tair_xdnngm.jpg\"\r\n                },\r\n                text: \"This is the task's chat\",\r\n                createdAt: Date.now()\r\n            },\r\n            {\r\n                by: {\r\n                    _id: \"600877404b50bc8b342c1733\",\r\n                    fullname: \"Amit Weiss\",\r\n                    imgUrl: \"https://res.cloudinary.com/tair/image/upload/v1611221821/Amit_cgtbfo.jpg\"\r\n                },\r\n                text: \"Here you can send comments, thoughts and updates about the task\",\r\n                createdAt: Date.now()\r\n            },\r\n            {\r\n                by: {\r\n                    _id: \"600877404b50bc8b342c1734\",\r\n                    fullname: \"Tamir Leshetz\",\r\n                    imgUrl: \"https://res.cloudinary.com/tair/image/upload/v1611221822/Tamir_zzn3m4.jpg\"\r\n                },\r\n                text: \"Or simply chat with the task members\",\r\n                createdAt: Date.now()\r\n            }\r\n        ]\r\n    }\r\n}","import { taskService } from './taskService';\r\nimport { utilService } from './utilService';\r\n\r\n\r\nexport const groupService = {\r\n    add,\r\n    remove,\r\n    update,\r\n    createGroup\r\n}\r\n\r\nfunction add(name, board) {\r\n    const updatedBoard = { ...board }\r\n    const group = createGroup(name)\r\n    updatedBoard.groups.push(group)\r\n    return updatedBoard\r\n}\r\n\r\nfunction remove(groupId, board) {\r\n    const updatedBoard = { ...board }\r\n    const updatedGroups = updatedBoard.groups.filter(group => group.id !== groupId)\r\n    updatedBoard.groups = [...updatedGroups]\r\n    return updatedBoard\r\n}\r\n\r\nfunction update(group, board) {\r\n    const updatedBoard = { ...board }\r\n    let groupIdx = updatedBoard.groups.findIndex(currGroup => currGroup.id === group.id)\r\n    updatedBoard.groups[groupIdx] = { ...group }\r\n    return updatedBoard\r\n}\r\n\r\nfunction createGroup(name) {\r\n    return {\r\n        id: utilService.makeId(),\r\n        name,\r\n        createdAt: 1606733763732,\r\n        updatedAt: 1606733763732,\r\n        tasks: [\r\n            taskService.createTask('task1'),\r\n            taskService.createTask('task2'),\r\n            taskService.createTask('task3')\r\n        ],\r\n        color: utilService.getRandomColor()\r\n    }\r\n}","import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV !== 'development'\r\n    ? '/'\r\n    : '//localhost:3030/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            // window.location.assign('/#/login')\r\n        }\r\n        throw err\r\n    }\r\n}","import { groupService } from './groupService'\r\nimport { httpService } from './httpService'\r\n\r\nconst BASE_URL = 'api/board'\r\n\r\nexport const boardService = {\r\n    query,\r\n    remove,\r\n    getById,\r\n    add,\r\n    update,\r\n    updateBoards\r\n}\r\n\r\n\r\nasync function query() {\r\n    const boards = await httpService.get(BASE_URL)\r\n    return boards\r\n}\r\n\r\nasync function update(board) {\r\n    await httpService.put(BASE_URL + '/' + board._id, board)\r\n}\r\n\r\nasync function remove(boardId) {\r\n    await httpService.delete(BASE_URL + '/' + boardId)\r\n}\r\n\r\nasync function getById(boardId) {\r\n    return await httpService.get(BASE_URL + '/' + boardId)\r\n}\r\n\r\nasync function add(boardName) {\r\n    const board = _createBoard(boardName)\r\n    const savedBoard = await httpService.post(BASE_URL, board)\r\n    return savedBoard\r\n}\r\n\r\nfunction updateBoards(updatedBoard, boards) {\r\n    return boards.map(board => {\r\n        if (board._id === updatedBoard._id) {\r\n            return updatedBoard\r\n        }\r\n        return board\r\n    })\r\n}\r\n\r\n\r\nfunction _createBoard(boardName) {\r\n    return {\r\n        name: boardName,\r\n        desc: 'edit your new board...',\r\n        status: [\r\n            {\r\n                txt: \"Completed\",\r\n                color: \"#00ca71\"\r\n            },\r\n            {\r\n                txt: \"Working on it\",\r\n                color: \"#fdab3d\"\r\n            },\r\n            {\r\n                txt: \"Stuck\",\r\n                color: \"#e44258\"\r\n            },\r\n            {\r\n                txt: \"New\",\r\n                color: \"gray\"\r\n            }\r\n        ],\r\n        priority: [\r\n            {\r\n                txt: \"Low\",\r\n                color: \"#00ca71\"\r\n            },\r\n            {\r\n                txt: \"Medium\",\r\n                color: \"#fdab3d\"\r\n            },\r\n            {\r\n                txt: \"High\",\r\n                color: \"#e44258\"\r\n            }\r\n        ],\r\n        creator: {\r\n            _id: \"600877404b50bc8b342c1732\",\r\n            fullname: \"Tair Bitan\",\r\n            imgUrl: \"https://res.cloudinary.com/tair/image/upload/v1611221821/Tair_xdnngm.jpg\"\r\n        },\r\n        groups: [\r\n            groupService.createGroup('group1'),\r\n            groupService.createGroup('group2'),\r\n            groupService.createGroup('group3')\r\n        ],\r\n        createdAt: Date.now(),\r\n        members: [\r\n            {\r\n                _id: \"600877404b50bc8b342c1732\",\r\n                fullname: \"Tair Bitan\",\r\n                imgUrl: \"https://res.cloudinary.com/tair/image/upload/v1611221821/Tair_xdnngm.jpg\"\r\n            },\r\n            {\r\n                _id: \"600877404b50bc8b342c1733\",\r\n                fullname: \"Amit Weiss\",\r\n                imgUrl: \"https://res.cloudinary.com/tair/image/upload/v1611221821/Amit_cgtbfo.jpg\"\r\n            },\r\n            {\r\n                _id: \"600877404b50bc8b342c1734\",\r\n                fullname: \"Tamir Leshetz\",\r\n                imgUrl: \"https://res.cloudinary.com/tair/image/upload/v1611221822/Tamir_zzn3m4.jpg\"\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\n","import io from 'socket.io-client'\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\r\nexport const socketService = createSocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket;\r\n  const socketService = {\r\n    setup() {\r\n      socket = io(baseUrl)\r\n    },\r\n    on(eventName, cb) {\r\n      socket.on(eventName, cb)\r\n    },\r\n    off(eventName, cb) {\r\n      socket.off(eventName, cb)\r\n    },\r\n    emit(eventName, data) {\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', { from: 'Someone', txt: 'Aha it worked!' })\r\n    },\r\n  }\r\n  return socketService\r\n}\r\n\r\n\r\n","import { boardService } from \"../../services/boardService\"\r\nimport { socketService } from \"../../services/socketService\"\r\n\r\nexport function loadBoards() {\r\n    return async dispatch => {\r\n        try {\r\n            const boards = await boardService.query()\r\n            dispatch({ type: 'SET_BOARDS', boards })\r\n        } catch (err) {\r\n            console.log('Board Actions: err in loadBoards', err)\r\n        } finally {\r\n        }\r\n    }\r\n}\r\n\r\nexport function loadBoard(boardId) {\r\n    return async dispatch => {\r\n        try {\r\n            const board = await boardService.getById(boardId)\r\n            dispatch({ type: 'SET_BOARD', board });\r\n        } catch (err) {\r\n            console.log('Board Actions: err in loadBoard', err)\r\n        } finally {\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateBoard(board) {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: 'SET_BOARD', board })\r\n            await boardService.update(board)\r\n            socketService.emit('board update')\r\n        } catch (err) {\r\n            console.log('Board Actions: err in updateBoard', err)\r\n        } finally {\r\n        }\r\n    }\r\n}\r\n\r\nexport function addBoard(boardName) {\r\n    return async dispatch => {\r\n        try {\r\n            const board = await boardService.add(boardName)\r\n            dispatch({ type: 'ADD_BOARD', board })\r\n            dispatch({ type: 'SET_BOARD', board })\r\n            socketService.emit('boards update', 'added board')\r\n        } catch (err) {\r\n            console.log('Board Actions: err in addBoard', err)\r\n        } finally {\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateBoards(board, boards) {\r\n    return dispatch => {\r\n        try {\r\n            const updatedBoards = boardService.updateBoards(board, boards)\r\n            dispatch({ type: 'SET_BOARDS', boards: updatedBoards })\r\n        } catch (err) {\r\n            console.log('Board Actions: err in updateBoards', err)\r\n        } finally {\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeBoard(boardId) {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: 'REMOVE_BOARD', boardId })\r\n            await boardService.remove(boardId)\r\n            socketService.emit('boards update', 'removed board')\r\n        } catch (err) {\r\n            console.log('Board Actions: err in removeBoard', err)\r\n        } finally {\r\n        }\r\n    }\r\n}\r\n\r\n","import { httpService } from './httpService'\r\nconst SCORE_FOR_REVIEW = 10\r\nconst BASE_URL = 'api'\r\n\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getLoggedinUser,\r\n    increaseScore,\r\n    addNotification\r\n}\r\n\r\nfunction getUsers() {\r\n    return httpService.get(`${BASE_URL}/user`)\r\n}\r\n\r\nfunction getById(userId) {\r\n    return httpService.get(`${BASE_URL}/user/${userId}`)\r\n}\r\n\r\nfunction remove(userId) {\r\n    return httpService.delete(`${BASE_URL}/user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    user = await httpService.put(`${BASE_URL}/user/${user._id}`, user)\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n}\r\n\r\nasync function increaseScore(by = SCORE_FOR_REVIEW) {\r\n    const user = getLoggedinUser()\r\n    user.score = user.score + by || by\r\n    await update(user)\r\n    return user.score\r\n}\r\n\r\nasync function login(userCred) {\r\n    const user = await httpService.post(`${BASE_URL}/auth/login`, userCred)\r\n    if (user) return _saveLocalUser(user)\r\n}\r\n\r\nasync function signup(userCred) {\r\n    const user = await httpService.post(`${BASE_URL}/auth/signup`, userCred)\r\n    return _saveLocalUser(user)\r\n}\r\n\r\nasync function logout() {\r\n    sessionStorage.clear()\r\n    return await httpService.post(`${BASE_URL}/auth/logout`)\r\n}\r\n\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem('loggedinUser'))\r\n}\r\n\r\nasync function addNotification(userId, notification) {\r\n    const user = await getById(userId)\r\n    user.notifications.push(notification)\r\n    return user\r\n}\r\n\r\n\r\n","import { userService } from '../../services/userService'\r\n\r\n\r\n\r\nexport function loadUsers() {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: 'LOADING_START' })\r\n            const users = await userService.getUsers()\r\n            dispatch({ type: 'SET_USERS', users })\r\n        } catch (err) {\r\n            console.log('UserActions: err in loadUsers', err)\r\n        } finally {\r\n            dispatch({ type: 'LOADING_DONE' })\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeUser(userId) {\r\n    return async dispatch => {\r\n        try {\r\n            await userService.remove(userId)\r\n            dispatch({ type: 'REMOVE_USER', userId })\r\n        } catch (err) {\r\n            console.log('UserActions: err in removeUser', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateUser(user) {\r\n    return async dispatch => {\r\n        try {\r\n            const loggedInUser = await userService.getById('600877404b50bc8b342c1734')\r\n            dispatch({ type: 'SET_USER', user: loggedInUser })\r\n        } catch (err) {\r\n            console.log('user Actions: err in updateUser', err)\r\n        } finally {\r\n        }\r\n    }\r\n}\r\n\r\nexport function loginUser(user) {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: 'LOGIN_USER', user })\r\n        } catch (err) {\r\n            console.log('user Actions: err in loginUser', err)\r\n        } finally {\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function login(userCreds) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.login(userCreds)\r\n            if (user) {\r\n                dispatch({ type: 'SET_USER', user })\r\n                return user\r\n            }\r\n        } catch (err) {\r\n            console.log('UserActions: err in login', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function signup(userCreds) {\r\n    return async dispatch => {\r\n        try {\r\n            const user = await userService.signup(userCreds)\r\n            dispatch({ type: 'SET_USER', user })\r\n            return user\r\n        } catch (err) {\r\n            console.log('UserActions: err in signup', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: 'SET_USER', user: null })\r\n            await userService.logout()\r\n        } catch (err) {\r\n            console.log('UserActions: err in logout', err)\r\n        }\r\n    }\r\n}\r\n","import { Component } from 'react'\r\n\r\nexport class TaskAdd extends Component {\r\n    state = {\r\n        task: {\r\n            txt: '',\r\n        }\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        var task = { ...this.state.task }\r\n        var { name, value } = ev.target\r\n        task[name] = value;\r\n        this.setState({ task })\r\n    };\r\n\r\n    onAddTask = (ev) => {\r\n        ev.preventDefault()\r\n        const taskName = this.state.task.txt\r\n        const { groupId } = this.props\r\n        this.props.onAddTask(taskName, groupId)\r\n        this.setState({\r\n            task: {\r\n                txt: '',\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const { task } = this.state\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onAddTask}>\r\n                    <input\r\n                        autoComplete=\"off\"\r\n                        className=\"input-task\"\r\n                        type=\"text\"\r\n                        name=\"txt\"\r\n                        placeholder=\"+Add\"\r\n                        value={task.txt}\r\n                        onChange={this.handleChange} />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/chat.e0b50698.svg\";","import { Component } from 'react';\r\nexport class ColorCmp extends Component {\r\n\r\n    render() {\r\n        const { changeColor, togglePallete } = this.props;\r\n        return (\r\n            <section className='colors-container' style={{ opacity: `${this.props.opacity}` }}>\r\n                <button\r\n                    className='btn-color dark-green' onClick={(ev) => { changeColor(ev, 'rgb(3, 127, 76)'); togglePallete() }}>\r\n                </button>\r\n                <button\r\n                    className='btn-color green' onClick={(ev) => { changeColor(ev, 'rgb(0, 202, 113)'); togglePallete() }}>\r\n                </button>\r\n                <button\r\n                    className='btn-color khaki' onClick={(ev) => { changeColor(ev, 'rgb(156, 211, 38)'); togglePallete() }}>\r\n                </button>\r\n                <button\r\n                    className='btn-color orange' onClick={(ev) => { changeColor(ev, 'rgb(255, 100, 46)'); togglePallete() }}>\r\n                </button>\r\n                <button\r\n                    className='btn-color light-orange' onClick={(ev) => { changeColor(ev, 'rgb(253, 171, 61)'); togglePallete() }}>\r\n                </button>\r\n                <button\r\n                    className='btn-color yellow' onClick={(ev) => { changeColor(ev, 'rgb(253, 171, 61)'); togglePallete() }}>\r\n                </button>\r\n                <button\r\n                    className='btn-color purple' onClick={(ev) => { changeColor(ev, 'rgb(120, 75, 209)'); togglePallete() }}>\r\n                </button>\r\n                <button\r\n                    className='btn-color light-purple' onClick={(ev) => { changeColor(ev, 'rgb(162, 93, 220)'); togglePallete() }}>\r\n                </button>\r\n                <button\r\n                    className='btn-color blue' onClick={(ev) => { changeColor(ev, 'rgb(0, 134, 192)'); togglePallete() }}>\r\n                </button>\r\n                <button\r\n                    className='btn-color bourdeaux' onClick={(ev) => { changeColor(ev, 'rgb(187, 51, 84)'); togglePallete() }}>\r\n                </button>\r\n                <button\r\n                    className='btn-color red' onClick={(ev) => { changeColor(ev, 'rgb(228, 66, 88)'); togglePallete() }}>\r\n                </button>\r\n                <button\r\n                    className='btn-color pink' onClick={(ev) => { changeColor(ev, 'rgb(255, 21, 138)'); togglePallete() }}>\r\n                </button>\r\n                <button\r\n                    className='btn-color black' onClick={(ev) => { changeColor(ev, 'rgb(32, 20, 17)'); togglePallete() }}>\r\n                </button>\r\n                <button\r\n                    className='btn-color brown' onClick={(ev) => { changeColor(ev, 'rgb(127, 83, 71)'); togglePallete() }}>\r\n                </button>\r\n                <button\r\n                    className='btn-color gray' onClick={(ev) => { changeColor(ev, 'gray'); togglePallete() }}>\r\n                </button>\r\n            </section>\r\n        )\r\n    }\r\n}","import { Component } from \"react\"\r\nimport { ColorCmp } from \"../../group/ColorCmp\"\r\nimport { Delete } from '@material-ui/icons';\r\n\r\nexport class TaskPropertyModal extends Component {\r\n    state = {\r\n        labelToAdd: {\r\n            txt: '',\r\n            color: 'rgb(120, 75, 209)'\r\n        }\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target\r\n        const copy = { ...this.state.labelToAdd }\r\n        copy.txt = value\r\n        this.setState({ labelToAdd: copy })\r\n    }\r\n\r\n    onColorChange = (ev, color) => {\r\n        ev.stopPropagation()\r\n        ev.preventDefault()\r\n        const copy = { ...this.state.labelToAdd }\r\n        copy.color = color\r\n        this.setState({ labelToAdd: copy })\r\n    }\r\n\r\n    onSubmit = (ev) => {\r\n        const copy = { ...this.state.labelToAdd }\r\n        copy.txt = ''\r\n        this.setState({ labelToAdd: copy })\r\n        this.props.onAddLabel(ev, this.state.labelToAdd, this.props.type)\r\n    }\r\n\r\n    pass = () => { }\r\n\r\n    render() {\r\n        const { options, type, handleModalChange, onRemoveLabel, findLabel } = this.props\r\n        const { labelToAdd } = this.state\r\n        return (\r\n            <div className=\" task-property-modal\">\r\n                {options.map((option, idx) => {\r\n                    return (\r\n                        <div\r\n                            className=\"option flex space-between align-center\"\r\n                            style={{ backgroundColor: option.color }}\r\n                            key={idx}\r\n                            onClick={() => handleModalChange(option.txt, type)}>\r\n                            <span className=\"text-no-overflow\">{option.txt}</span>\r\n                            <Delete\r\n                                className=\"del-btn\"\r\n                                style={(findLabel(option.txt, type) ? { cursor: \"no-drop\" } : {})}\r\n                                onClick={(ev) => {\r\n                                    onRemoveLabel(ev, option.txt, type)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )\r\n                })\r\n                }\r\n                <form onClick={(ev) => {\r\n                    ev.stopPropagation()\r\n                }}\r\n                    onSubmit={(ev) => {\r\n                        this.onSubmit(ev)\r\n                    }}>\r\n                    <input\r\n                        className=\"input\"\r\n                        onChange={this.handleChange}\r\n                        type=\"text\"\r\n                        value={labelToAdd.txt}\r\n                        placeholder={`add label...`}\r\n                        style={{ borderLeftColor: this.state.labelToAdd.color }}\r\n                    />\r\n                    <button type=\"submit\" hidden></button>\r\n                    <ColorCmp\r\n                        className=\"color-pallete\"\r\n                        changeColor={this.onColorChange}\r\n                        togglePallete={this.pass}\r\n                    />\r\n                </form>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n","import { Component } from 'react';\r\nimport 'react-date-range/dist/styles.css';\r\nimport 'react-date-range/dist/theme/default.css';\r\nimport { DateRangePicker } from 'react-date-range';\r\nvar dateFormat = require(\"dateformat\");\r\n\r\nexport class DateRange extends Component {\r\n    state = {\r\n        isOpen: false,\r\n        dateRange: {},\r\n        timeline: '',\r\n        workingDays: 0,\r\n        barWidth: 0,\r\n        barColor: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { dateRange } = this.props.task;\r\n        const { group } = this.props;\r\n        this.setState({ dateRange, barColor: group.color }, () => {\r\n            this.showTimeline();\r\n            this.calcBarWidth(dateRange);\r\n        })\r\n    }\r\n\r\n    toggleDatePicker = () => {\r\n        this.setState({ isOpen: !this.state.isOpen })\r\n    }\r\n\r\n    handleSelect = (ranges) => {\r\n        const { onUpdateTask, group, task } = this.props;\r\n        const rangeCopy = { ...this.state.dateRange };\r\n        rangeCopy.startDate = ranges.selection.startDate;\r\n        rangeCopy.endDate = ranges.selection.endDate;\r\n        this.calcBarWidth(rangeCopy);\r\n        this.setState({ dateRange: rangeCopy }, () => {\r\n            this.showTimeline();\r\n            task.dateRange = this.state.dateRange;\r\n            onUpdateTask(task, group.id);\r\n        })\r\n    }\r\n\r\n    showTimeline = () => {\r\n        const { dateRange } = this.state;\r\n        let start = dateFormat(dateRange.startDate, \"mmm-dd\");\r\n        let end = dateFormat(dateRange.endDate, \"mmm-dd\");\r\n        this.setState({ timeline: `${start} - ${end}` })\r\n    }\r\n\r\n    calcBarWidth = (dateRange) => {\r\n        const totalTime = new Date(dateRange.endDate).getTime() - new Date(dateRange.startDate).getTime();\r\n        const elapsedTime = Date.now() - new Date(dateRange.startDate).getTime();\r\n        const barWidth = (elapsedTime / totalTime) * 100;\r\n        const workingDays = totalTime / 1000 / 60 / 60 / 24;\r\n        this.setState({ barWidth, workingDays });\r\n    }\r\n\r\n    render() {\r\n        const { isOpen, timeline, workingDays, dateRange, barColor, barWidth } = this.state;\r\n        if (dateRange === {}) return <div>Loading...</div>\r\n        const selectionRange = {\r\n            startDate: new Date(dateRange.startDate),\r\n            endDate: new Date(dateRange.endDate),\r\n            key: 'selection',\r\n        }\r\n        return (\r\n            <section className=\"column-date\">\r\n                <div className=\"date flex align-center\" onClick={this.toggleDatePicker}>\r\n                    <div className=\"date-bar\"\r\n                        style={{ backgroundColor: `${barColor}`, width: `${barWidth}%` }}\r\n                    >\r\n                    </div>\r\n                    <div className=\"date-content\">\r\n                        {timeline}\r\n                    </div>\r\n                    <div className=\"date-hover-content\">\r\n                        {`${workingDays}d`}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {isOpen && <DateRangePicker\r\n                        ranges={[selectionRange]}\r\n                        onChange={this.handleSelect}\r\n                    />}\r\n                </div>\r\n                {isOpen &&\r\n                    <div\r\n                        className=\"screen\"\r\n                        onClick={this.toggleDatePicker}\r\n                    />}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import { Component } from 'react';\r\n\r\nexport class Notes extends Component {\r\n    state = {\r\n        note: '',\r\n        isEditable: false\r\n    }\r\n    componentDidMount() {\r\n        const { note } = this.props.task;\r\n        this.setState({ note })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        this.setState({ note: ev.target.value })\r\n    }\r\n\r\n    onSave = (ev) => {\r\n        const { handleNoteChange } = this.props;\r\n        this.setState({ isEditable: false });\r\n        handleNoteChange(this.state.note);\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ isEditable: false })\r\n    }\r\n\r\n    render() {\r\n        const { note, isEditable } = this.state;\r\n        return (\r\n            <section className=\"column-notes\">\r\n                <p className=\"editable\" onClick={() => this.setState({ isEditable: true })}>{note}</p>\r\n                {isEditable &&\r\n                    <textarea\r\n                        className=\"modal-edit\"\r\n                        cols=\"20\" rows=\"10\"\r\n                        autoFocus\r\n                        value={note}\r\n                        onChange={this.handleChange}\r\n                        onKeyDown={(ev) => {\r\n                            if (ev.key === 'Enter') {\r\n                                this.onSave(ev);\r\n                            }\r\n                        }}\r\n                    />}\r\n                {isEditable &&\r\n                    <div\r\n                        onClick={this.closeModal}\r\n                        className=\"screen\">\r\n                    </div>}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n","import { Component } from 'react';\r\n\r\nimport { Avatar } from '@material-ui/core';\r\nimport { AvatarGroup } from '@material-ui/lab';\r\n\r\n\r\n\r\nexport class TaskMembers extends Component {\r\n    state = {\r\n        isOpen: false,\r\n    }\r\n\r\n    toggleMemebers = () => {\r\n        this.setState({ isOpen: !this.state.isOpen })\r\n    }\r\n\r\n    renderTaskMembers = (members) => {\r\n        if (!members.length) {\r\n            return <Avatar className=\"avatar\" src=\"/broken-image\" />\r\n        }\r\n        return members.map(member => {\r\n            return <Avatar\r\n                key={member._id}\r\n                className=\"avatar\"\r\n                alt={member.fullname}\r\n                src={member.imgUrl}\r\n            />\r\n        })\r\n    }\r\n\r\n    renderBoardMembers = (taskMembers, boardMembers) => {\r\n        return boardMembers.map(boardMember => {\r\n            if (!taskMembers.find(taskMember => taskMember._id === boardMember._id)) {\r\n                return (\r\n                    <div\r\n                        className=\"member-card flex align-center\"\r\n                        key={boardMember._id}\r\n                        onClick={() => {\r\n                            this.props.onAddMember(boardMember)\r\n                        }}>\r\n                        <div className=\"member-right flex align-center\">\r\n                            <Avatar\r\n                                className=\"avatar\"\r\n                                alt={`${boardMember.fullname}`}\r\n                                src={boardMember.imgUrl}\r\n                            />\r\n                            <span className=\"member-name\">{boardMember.fullname}</span>\r\n                        </div>\r\n                        <span className=\"member-btn\">&#43;</span>\r\n                    </div>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { task, boardMembers, onRemoveMember } = this.props;\r\n        const { isOpen } = this.state;\r\n        return (\r\n            <div className=\"column-members\">\r\n                <AvatarGroup max={2} className=\"avatar-container flex center\" onClick={this.toggleMemebers} >\r\n                    {this.renderTaskMembers(task.members)}\r\n                </AvatarGroup>\r\n                <Avatar style={{ display: \"none\" }} src=\"/broken-image.jpg\" />\r\n                {isOpen &&\r\n                    <div className=\"members-list\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter name\"\r\n                            autoFocus\r\n                        />\r\n                        {task.members.map((member) => {\r\n                            return (\r\n                                <div\r\n                                    className=\"member-card flex align-center\"\r\n                                    key={member._id}\r\n                                    onClick={() => {\r\n                                        onRemoveMember(member._id)\r\n                                    }}>\r\n                                    <div className=\"member-right flex align-center\">\r\n                                        <Avatar\r\n                                            className=\"avatar\"\r\n                                            alt={`${member.fullname}`}\r\n                                            src={member.imgUrl}\r\n                                        />\r\n                                        <span className=\"member-name\">{member.fullname}</span>\r\n                                    </div>\r\n                                    <span className=\"member-btn\">&minus;</span>\r\n\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        <div>\r\n                            <div className=\"line\"></div>\r\n                            <span className=\"people\">People</span>\r\n                        </div>\r\n                        {this.renderBoardMembers(task.members, boardMembers)}\r\n                    </div>}\r\n                {\r\n                    isOpen &&\r\n                    <div\r\n                        className=\"screen\"\r\n                        onClick={this.toggleMemebers}\r\n                    />\r\n                }\r\n            </div >\r\n        )\r\n    }\r\n}\r\n","import { Avatar } from '@material-ui/core';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\r\n\r\nexport function CommentPreview({ comment }) {\r\n    return (\r\n        <div className=\"comment-preview flex col\">\r\n\r\n            <div className=\"comment-author flex space-between align-center\">\r\n                <div className=\"flex align-center\">\r\n                    <Avatar\r\n                        className=\"author-img\"\r\n                        src={comment.by.imgUrl}\r\n                        alt=\"avatar\"\r\n                    />\r\n                    <h4 className=\"author-name\">{comment.by.fullname}</h4>\r\n                </div>\r\n                <div>\r\n                    <span className=\"comment-time flex align-center \">{new Date(comment.createdAt).toLocaleTimeString()}</span>\r\n                </div>\r\n            </div>\r\n            <span className=\"comment-text\">{comment.text}</span>\r\n            {comment.imgUrl && <img className=\"uploaded-img\" src={comment.imgUrl} alt=\"content\" />}\r\n            <div className=\"btn-comment-bottom flex\">\r\n                <span className=\"btn flex center align-center\"><ThumbUpAltOutlinedIcon />Like</span>\r\n                <span className=\"btn flex center align-center\"><ReplyIcon />Reply</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { CommentPreview } from \"./CommentPreview\";\r\n\r\nexport function CommentList({ comments }) {\r\n    return (\r\n        <div className=\"comment-list\">\r\n            {comments.map((comment, idx) => {\r\n                return <CommentPreview key={idx} comment={comment} />\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const cloudinaryService = {\n    uploadImg\n}\n\n\nasync function uploadImg(ev) {\n    const CLOUD_NAME = \"tair\"\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\n    const UPLOAD_PRESET = \"zgpktlvr\"\n\n    const formData = new FormData();\n    formData.append('file', ev.target.files[0])\n    formData.append('upload_preset', UPLOAD_PRESET);\n    try {\n        const res = await fetch(UPLOAD_URL, {\n            method: 'POST',\n            body: formData\n        })\n        const data = await res.json()\n        return data\n\n    } catch (err) {\n        console.log(err);\n    }\n}\n","import { Button } from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { Component } from 'react'\r\nimport { CommentList } from './comment/CommentList'\r\nimport { cloudinaryService } from '../../services/cloudinaryService'\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\n\r\n\r\nexport class TaskDetails extends Component {\r\n    state = {\r\n        clickedInput: false,\r\n        comment: {\r\n            by: {},\r\n            text: '',\r\n            imgUrl: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const { loggedInUser } = this.props;\r\n        const by = {\r\n            _id: loggedInUser._id,\r\n            fullname: loggedInUser.fullname,\r\n            imgUrl: loggedInUser.imgUrl\r\n        }\r\n        const commentCopy = { ...this.state.comment }\r\n        commentCopy.by = by\r\n        this.setState({ comment: commentCopy })\r\n    }\r\n\r\n    onUpload = async (ev) => {\r\n        ev.preventDefault()\r\n        const img = await cloudinaryService.uploadImg(ev)\r\n        this.setState(prevState => {\r\n            return {\r\n                comment: {\r\n                    ...prevState.comment,\r\n                    imgUrl: img.url\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    toggleShowTextArea = () => {\r\n        this.setState({ clickedInput: !this.state.clickedInput })\r\n    }\r\n\r\n    onSubmitComment = (ev) => {\r\n        ev.preventDefault()\r\n        this.toggleShowTextArea()\r\n        this.props.onAddComment(this.state.comment)\r\n        const commentCopy = { ...this.state.comment }\r\n        commentCopy.text = ''\r\n        this.setState({ comment: commentCopy })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target\r\n        const commentCopy = { ...this.state.comment }\r\n        commentCopy.text = value\r\n        this.setState({ comment: commentCopy })\r\n    }\r\n\r\n    render() {\r\n        const { clickedInput, comment } = this.state\r\n        const { task, closeModal } = this.props\r\n        return (\r\n            <section className=\"task-details\" onClick={(ev) => ev.stopPropagation()} >\r\n                <CloseIcon className=\"close-icon\" onClick={closeModal} />\r\n                <div className=\"task-name-container\">\r\n                    <span>{task.name}</span>\r\n                </div>\r\n                {!clickedInput &&\r\n                    <input type=\"text\" onFocus={this.toggleShowTextArea} placeholder=\"Write an update ...\" />}\r\n                {clickedInput &&\r\n                    <form\r\n                        className=\"comment-wrapper flex col\"\r\n                        onSubmit={(ev) => {\r\n                            this.onSubmitComment(ev)\r\n                        }}>\r\n                        <textarea\r\n                            autoFocus={true}\r\n                            value={comment.text}\r\n                            onChange={(ev) => this.handleChange(ev)}\r\n                            required\r\n                        />\r\n                        <div className=\"upload-img flex col\">\r\n                            <label><span className=\"flex align-center\"><AttachFileIcon /> Add File</span>\r\n                                <input type=\"file\" onChange={(ev) => this.onUpload(ev)} name=\"\" />\r\n                            </label>\r\n                            {comment.imgUrl && <img src={comment.imgUrl} alt=\"\" />}\r\n                        </div>\r\n                        <Button\r\n                            className=\"update-btn\"\r\n                            type=\"submit\"\r\n                            variant=\"contained\">\r\n                            send\r\n                        </Button>\r\n                    </form>}\r\n                <CommentList comments={task.comments} />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","\r\nexport function DeleteModalTask({ task, group, onRemove, onCloseModalDelete }) {\r\n\r\n    return (\r\n        < div className=\"modal-delete flex col space-between\" >\r\n            <div className=\"top\">\r\n                <p>Are you sure want to delete Task? \"{task.name}\"</p>\r\n            </div>\r\n            <div className=\"bottom flex align-center\">\r\n                <button className=\"btn-delete\" onClick={() => onRemove(task.id, group)}>Delete</button>\r\n                <button className=\"btn-go-back\" onClick={onCloseModalDelete}>Go Back</button>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","import { Delete } from '@material-ui/icons';\r\nimport { Component } from 'react';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nimport chat from '../../assets/icons/chat.svg';\r\nimport { TaskPropertyModal } from './columns/TaskPropertyModal';\r\nimport { DateRange } from './columns/DateRange';\r\nimport { Notes } from './columns/Notes';\r\nimport { TaskMembers } from './columns/TaskMembers';\r\nimport { TaskDetails } from './TaskDetails';\r\nimport { taskService } from '../../services/taskService';\r\nimport { DeleteModalTask } from '../DeleteModalTask';\r\nimport { socketService } from '../../services/socketService';\r\n\r\nexport class TaskPreview extends Component {\r\n    state = {\r\n        editMode: false,\r\n        task: {},\r\n        isShownDetails: false,\r\n        isShownMembers: false,\r\n        isModalShown: false,\r\n        isStatusClicked: false,\r\n        isPriorityClicked: false,\r\n        isModalDeleteShown: false,\r\n        isOver: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const currTask = this.props.task;\r\n        this.setState({ task: currTask });\r\n    }\r\n\r\n    toggleEditMode = () => {\r\n        this.setState({ editMode: !this.state.editMode })\r\n    }\r\n\r\n    toggleShowDetails = () => {\r\n        this.setState({\r\n            isShownDetails: !this.state.isShownDetails,\r\n        })\r\n    }\r\n    toggleHoverMouse = () => {\r\n        this.setState({ isOver: true })\r\n    }\r\n    toggleUnHoverMouse = () => {\r\n        this.setState({ isOver: false })\r\n    }\r\n\r\n    toggleShowModal = (option) => {\r\n\r\n        (option === 'status') ?\r\n            this.setState({\r\n                isStatusClicked: !this.state.isStatusClicked,\r\n                isModalShown: !this.state.isModalShown\r\n            }) :\r\n            this.setState({\r\n                isPriorityClicked: !this.state.isPriorityClicked,\r\n                isModalShown: !this.state.isModalShown\r\n            })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const { value } = ev.target\r\n\r\n        const field = ev.target.name\r\n        const taskCopy = { ...this.state.task }\r\n        taskCopy[field] = value\r\n        this.setState({ task: taskCopy })\r\n\r\n    }\r\n\r\n    onChangeDate = (date) => {\r\n        const { group, task } = this.props;\r\n        task.dateRange = date;\r\n        this.props.onUpdateTask(task, group.id);\r\n    }\r\n\r\n    handleNoteChange = (note) => {\r\n        const { group, task } = this.props;\r\n        task.note = note;\r\n        this.props.onUpdateTask(task, group.id);\r\n    }\r\n\r\n    handleModalChange = (txt, type) => {\r\n        const taskCopy = { ...this.props.task }\r\n        taskCopy[type] = txt\r\n        this.setState({ task: taskCopy }, () => {\r\n            this.props.onUpdateTask(taskCopy, this.props.group.id)\r\n        })\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({\r\n            isStatusClicked: false,\r\n            isPriorityClicked: false,\r\n            isModalShown: false,\r\n            isShownDetails: false\r\n        })\r\n    }\r\n\r\n    onToggleDelete = () => {\r\n        var { isModalDeleteShown } = this.state\r\n        this.setState({ isModalDeleteShown: !isModalDeleteShown })\r\n    }\r\n\r\n    closeDetails = () => {\r\n        this.setState({ isShownDetails: false })\r\n    }\r\n\r\n    onAddLabel = (ev, label, type) => {\r\n        ev.preventDefault()\r\n        this.props.activeBoard[type].push(label)\r\n        const { group, task } = this.props;\r\n        this.props.onUpdateTask(task, group.id);\r\n    }\r\n    onRemoveLabel = (ev, txt, type) => {\r\n        ev.stopPropagation()\r\n        if (this.findLabel(txt, type)) {\r\n            return\r\n        }\r\n        this.props.activeBoard[type] = this.props.activeBoard[type].filter(option => option.txt !== txt)\r\n        const { group, task } = this.props;\r\n        this.props.onUpdateTask(task, group.id);\r\n    }\r\n\r\n    findLabel = (txt, type) => {\r\n        let found = false\r\n        this.props.activeBoard.groups.forEach(group => {\r\n            group.tasks.forEach(task => {\r\n                if (task[type] === txt) {\r\n                    found = true\r\n                }\r\n            })\r\n        })\r\n        return found\r\n    }\r\n\r\n    onAddComment = (comment = {}) => {\r\n        const { group } = this.props;\r\n        const task = taskService.addComment(comment, this.props.task)\r\n        this.props.onUpdateTask(task, group.id)\r\n    }\r\n\r\n    getPropColor = (txt, type) => {\r\n        return this.props.activeBoard[type].find(option => option.txt === txt).color;\r\n    }\r\n\r\n    onRemoveMember = (memberId) => {\r\n        const { group, task, onUpdateTask } = this.props;\r\n        const updatedTask = taskService.removeMember(task, memberId)\r\n        onUpdateTask(updatedTask, group.id)\r\n    }\r\n\r\n    onAddMember = async (member) => {\r\n        const { group, task, onUpdateTask, loggedInUser } = this.props;\r\n        const updatedTask = taskService.addMember(task, member)\r\n        onUpdateTask(updatedTask, group.id)\r\n        const notification = {\r\n            byUser: {\r\n                _id: loggedInUser._id,\r\n                fullname: loggedInUser.fullname,\r\n                imgUrl: loggedInUser.imgUrl\r\n            },\r\n            content: `added ${member.fullname} to task ${task.name}`\r\n        }\r\n        socketService.emit('task add member', notification)\r\n    }\r\n\r\n    render() {\r\n        const { onRemoveTask, task, group, onUpdateTask, provided, activeBoard, loggedInUser } = this.props\r\n        const { editMode, isStatusClicked, isPriorityClicked, isShownDetails, isModalShown, isOver } = this.state\r\n        const { name } = this.state.task\r\n        if (!activeBoard) return <div>Loading...</div>\r\n\r\n        return (\r\n            <div\r\n                style={{ borderLeft: `8px solid ${group.color} ` }}\r\n                className=\"task-preview flex space-between\">\r\n                <div className=\"task-left flex space-between align-center\" {...provided.dragHandleProps}>\r\n                    <div className=\"task-left-content flex align-center text-no-overflow\">\r\n                        <Delete\r\n                            className=\"trash\"\r\n                            onClick={this.onToggleDelete}\r\n                        />\r\n                        {this.state.isModalDeleteShown &&\r\n                            <DeleteModalTask\r\n                                onRemove={onRemoveTask}\r\n                                task={task}\r\n                                group={group}\r\n                                onCloseModalDelete={this.onToggleDelete}\r\n                            />}\r\n                        {this.state.isModalDeleteShown &&\r\n                            <div\r\n                                className=\"dark-screen-nover \"\r\n                            />}\r\n                        {editMode &&\r\n                            <form onSubmit={(ev) => {\r\n                                ev.preventDefault()\r\n                                this.toggleEditMode()\r\n                                onUpdateTask(this.state.task, group.id)\r\n                            }}>\r\n                                <input\r\n                                    name=\"name\"\r\n                                    value={name}\r\n                                    onBlur={() => {\r\n                                        this.toggleEditMode()\r\n                                        const updatedTask = { ...task }\r\n                                        updatedTask.name = name\r\n                                        onUpdateTask(updatedTask, group.id)\r\n                                    }}\r\n                                    autoComplete=\"off\"\r\n                                    autoFocus={true}\r\n                                    onChange={(ev) => this.handleChange(ev)}\r\n                                />\r\n                                <button type=\"submit\" hidden></button>\r\n                            </form>\r\n                        }\r\n\r\n                        {!editMode &&\r\n                            <p className=\"task-name\" onChange={(ev) => {\r\n                            }}>\r\n                                {task.name}\r\n                            </p>}\r\n                        {!editMode &&\r\n                            <EditIcon\r\n                                className=\"edit-icon\"\r\n                                onClick={this.toggleEditMode}\r\n                            >edit\r\n                        </EditIcon>}\r\n                    </div>\r\n                    <div\r\n                        className=\"task-left-chat flex end align-center\"\r\n                        onClick={this.toggleShowDetails} >\r\n                        <img\r\n                            src={chat}\r\n                            width=\"25px\"\r\n                            alt=\"chaticon\"\r\n                            className=\"icon-chat\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"task-right flex align-center space-between\">\r\n                    <TaskMembers\r\n                        task={task}\r\n                        boardMembers={activeBoard.members}\r\n                        onRemoveMember={this.onRemoveMember}\r\n                        onAddMember={this.onAddMember}\r\n                    />\r\n                    <div\r\n                        className={`status relative flex center align-center `}\r\n                        style={{ backgroundColor: this.getPropColor(task.status, 'status') }}\r\n                        onMouseEnter={this.toggleHoverMouse} onMouseOut={this.toggleUnHoverMouse}\r\n                        onClick={() => {\r\n                            this.toggleShowModal('status')\r\n                        }}>\r\n                        <span className=\"text-no-overflow\">\r\n                            {task.status}\r\n                        </span>\r\n                        {isStatusClicked && <TaskPropertyModal\r\n                            type=\"status\"\r\n                            handleModalChange={this.handleModalChange}\r\n                            options={activeBoard.status}\r\n                            onAddLabel={this.onAddLabel}\r\n                            onRemoveLabel={this.onRemoveLabel}\r\n                            findLabel={this.findLabel}\r\n                        />}\r\n                        <div className={`${(isOver) ? 'small-div' : 'small-div-close'}`}\r\n                            style={{ backgroundColor: this.getPropColor(task.status, 'status') }}\r\n                        ></div>\r\n                    </div>\r\n                    <DateRange\r\n                        className=\"column-date\"\r\n                        task={task}\r\n                        group={group}\r\n                        onUpdateTask={onUpdateTask}\r\n                    />\r\n                    <div\r\n                        className={`priority relative flex align-center center`}\r\n                        style={{ backgroundColor: this.getPropColor(task.priority, 'priority') }}\r\n                        onClick={() => {\r\n                            this.toggleShowModal('priority')\r\n                        }}>\r\n                        <span className=\"text-no-overflow\">{task.priority}</span>\r\n                        {isPriorityClicked &&\r\n                            <TaskPropertyModal\r\n                                type=\"priority\"\r\n                                handleModalChange={this.handleModalChange}\r\n                                options={activeBoard.priority}\r\n                                onAddLabel={this.onAddLabel}\r\n                                onRemoveLabel={this.onRemoveLabel}\r\n                                findLabel={this.findLabel}\r\n                            />}\r\n                    </div>\r\n                    <Notes task={task} handleNoteChange={this.handleNoteChange} />\r\n                </div>\r\n\r\n                {isModalShown && <div className=\"screen\" onClick={this.closeModal}></div>}\r\n                {isShownDetails && <div className=\"dark-screen\" onClick={this.closeModal}></div>}\r\n                {isShownDetails &&\r\n                    <TaskDetails\r\n                        groupId={group.id}\r\n                        task={task}\r\n                        onAddComment={this.onAddComment}\r\n                        closeModal={this.closeModal}\r\n                        onUpdateTask={onUpdateTask}\r\n                        loggedInUser={loggedInUser}\r\n                    />}\r\n            </div >\r\n        )\r\n    }\r\n}\r\n","import { TaskPreview } from \"./TaskPreview\";\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\n\r\nexport function TaskList({ tasks, group, onRemoveTask, onUpdateTask, activeBoard, loggedInUser, onUpdateUser }) {\r\n    return (\r\n        <section>\r\n            <Droppable droppableId={group.id} type=\"task\">\r\n                {(provided) => (\r\n                    <div className=\"task-list flex col\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                        {tasks.map((task, index) => {\r\n                            return (\r\n                                <Draggable key={task.id} draggableId={task.id} index={index}>\r\n                                    {(provided) => (\r\n                                        <div {...provided.draggableProps} ref={provided.innerRef}>\r\n                                            <TaskPreview\r\n                                                key={task.id}\r\n                                                task={task}\r\n                                                group={group}\r\n                                                onRemoveTask={onRemoveTask}\r\n                                                onUpdateTask={onUpdateTask}\r\n                                                provided={provided}\r\n                                                activeBoard={activeBoard}\r\n                                                loggedInUser={loggedInUser}\r\n                                                onUpdateUser={onUpdateUser}\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            )\r\n                        })}\r\n                        {provided.placeholder}\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        </section >\r\n    )\r\n}\r\n","\r\nexport function DeleteModalGroup({ group, onRemoveGroup, onCloseModalDelete }) {\r\n\r\n    return (\r\n        < div className=\"modal-delete flex col space-between\" >\r\n            <div className=\"top\">\r\n                <p>You're sure want to delete Group? \"{group.name}\"</p>\r\n            </div>\r\n            <div className=\"bottom flex align-center\">\r\n                <button className=\"btn-delete\" onClick={(ev) => onRemoveGroup(ev, group.id)}>Delete</button>\r\n                <button className=\"btn-go-back\" onClick={onCloseModalDelete}>Go Back</button>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { ColorLens } from '@material-ui/icons';\r\nimport { ColorCmp } from './ColorCmp';\r\nimport { DeleteModalGroup } from '../DeleteModalGroup';\r\n\r\nexport class GroupEdit extends Component {\r\n    state = {\r\n        group: null,\r\n        showPallete: false,\r\n        isModalDeleteShown: false\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { group } = this.props;\r\n        this.setState({ group });\r\n    }\r\n\r\n    togglePallete = () => {\r\n        var { showPallete } = this.state;\r\n        showPallete = !showPallete;\r\n        this.setState({ showPallete });\r\n    }\r\n\r\n    changeColor = (ev, chosenColor) => {\r\n        const { group } = this.state;\r\n        const { toggleModal, onUpdateGroup } = this.props;\r\n        ev.stopPropagation();\r\n        const copyGroup = { ...group };\r\n        copyGroup.color = chosenColor;\r\n        onUpdateGroup(copyGroup);\r\n        toggleModal();\r\n    }\r\n\r\n    onOpenModalDelete = () => {\r\n        var { isModalDeleteShown } = this.state\r\n        this.setState({ isModalDeleteShown: !isModalDeleteShown })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { onRemoveGroup, group } = this.props;\r\n        const { showPallete } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <section className=\"group-edit flex col \">\r\n                    <span className=\"delete flex align-center\" onClick={this.onOpenModalDelete}>\r\n                        <DeleteIcon\r\n                            className=\"icon-delete\"\r\n                        />\r\n                    Delete Group\r\n                </span>\r\n                    <span className=\"color flex align-center\" onClick={this.togglePallete}>\r\n                        <ColorLens />\r\n                    Change Color\r\n                    {showPallete && <ColorCmp togglePallete={this.togglePallete} changeColor={this.changeColor} />}\r\n                    </span>\r\n                </section>\r\n                {this.state.isModalDeleteShown &&\r\n                    <DeleteModalGroup\r\n                        group={group}\r\n                        onRemoveGroup={onRemoveGroup}\r\n                        onCloseModalDelete={this.onOpenModalDelete}\r\n                    />}\r\n                {this.state.isModalDeleteShown &&\r\n                    <div\r\n                        className=\"dark-screen-nover \"\r\n                    />}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","\r\nexport function GroupProgressBar({ tasks, activeBoard }) {\r\n    const priorityCounter = {}\r\n    const statusCounter = {}\r\n    activeBoard.status.forEach(option => {\r\n        statusCounter[option.txt] = 0\r\n    })\r\n    activeBoard.priority.forEach(option => {\r\n        priorityCounter[option.txt] = 0\r\n    })\r\n    tasks.forEach(task => {\r\n        priorityCounter[task.priority]++\r\n        statusCounter[task.status]++\r\n    })\r\n    return (\r\n        <section className=\"group-progress-bar flex\">\r\n            <div className=\"priority-prog-bar flex\">\r\n                {activeBoard.priority.map((option, idx) => {\r\n                    return <div\r\n                        key={idx}\r\n                        data-title=\r\n                        {`${option.txt} ${priorityCounter[option.txt]} / ${tasks.length}\r\n                         ${(priorityCounter[option.txt] / tasks.length * 100).toFixed()}%`}\r\n                        style=\r\n                        {{\r\n                            backgroundColor: option.color,\r\n                            width: (priorityCounter[option.txt] / tasks.length * 100) + '%'\r\n                        }}\r\n                    />\r\n                })}\r\n            </div>\r\n            <div className=\"status-prog-bar flex\">\r\n                {activeBoard.status.map((option, idx) => {\r\n                    return <div\r\n                        key={idx}\r\n                        data-title=\r\n                        {`${option.txt} ${statusCounter[option.txt]} / ${tasks.length}\r\n                         ${(statusCounter[option.txt] / tasks.length * 100).toFixed()}%`}\r\n                        style=\r\n                        {{\r\n                            backgroundColor: option.color,\r\n                            width: (statusCounter[option.txt] / tasks.length * 100) + '%'\r\n                        }}\r\n                    />\r\n                })}\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","import { Component } from 'react';\r\nimport DragIndicatorIcon from '@material-ui/icons/DragIndicator';\r\n\r\nimport { TaskAdd } from '../task/TaskAdd'\r\nimport { TaskList } from '../task/TaskList'\r\nimport { GroupEdit } from './GroupEdit';\r\nimport { ExpandMore } from '@material-ui/icons';\r\nimport { GroupProgressBar } from './GroupProgressBar';\r\n\r\nexport class GroupPreview extends Component {\r\n    state = {\r\n        showModal: false\r\n    }\r\n\r\n    toggleModal = () => {\r\n        var { showModal } = this.state;\r\n        showModal = !showModal;\r\n        this.setState({ showModal });\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ showModal: false })\r\n    }\r\n\r\n    render() {\r\n        const { group, onAddTask, onRemoveTask, onUpdateTask, onRemoveGroup, onUpdateGroup, handleDragEnd, provided, activeBoard, loggedInUser }\r\n            = this.props;\r\n        const { showModal } = this.state;\r\n        return (\r\n            <section className=\"group-preview flex col\">\r\n                <div className=\"group-header flex space-between\">\r\n                    <div className=\"group-header-left flex\" >\r\n                        <span className=\"icon-drag\" {...provided.dragHandleProps}><DragIndicatorIcon /></span>\r\n                        <ExpandMore onClick={this.toggleModal} className=\"btn-expand\" />\r\n                        {showModal &&\r\n                            <GroupEdit\r\n                                onRemoveGroup={onRemoveGroup}\r\n                                onUpdateGroup={onUpdateGroup}\r\n                                group={group}\r\n                                toggleModal={this.toggleModal}\r\n                            />}\r\n                        <span\r\n                            className=\"group-name editable\"\r\n                            style={{ color: `${group.color}`, fontWeight: 'normal' }}\r\n                            contentEditable=\"true\"\r\n                            onBlur={(ev) => {\r\n                                const updatedGroup = { ...group }\r\n                                updatedGroup.name = ev.target.innerText\r\n                                onUpdateGroup(updatedGroup)\r\n\r\n                            }}\r\n                            suppressContentEditableWarning={true}\r\n                            onKeyDown={(ev) => {\r\n                                if (ev.key === 'Enter') {\r\n                                    ev.target.blur()\r\n                                }\r\n                            }}\r\n\r\n                        >\r\n                            {group.name}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"group-header-right flex\">\r\n                        <h5>Members</h5>\r\n                        <h5>Status</h5>\r\n                        <h5>TimeLine</h5>\r\n                        <h5>Priority</h5>\r\n                        <h5>Notes</h5>\r\n                    </div>\r\n                </div>\r\n                <TaskList\r\n                    tasks={group.tasks}\r\n                    group={group}\r\n                    onUpdateTask={onUpdateTask}\r\n                    onRemoveTask={onRemoveTask}\r\n                    handleDragEnd={handleDragEnd}\r\n                    activeBoard={activeBoard}\r\n                    loggedInUser={loggedInUser}\r\n                />\r\n                <TaskAdd\r\n                    onAddTask={onAddTask}\r\n                    groupId={group.id}\r\n                />\r\n                <GroupProgressBar activeBoard={activeBoard} tasks={group.tasks} />\r\n                { showModal && <div className=\"screen\" onClick={this.closeModal}></div>}\r\n            </section >\r\n        )\r\n    }\r\n}\r\n","import { GroupPreview } from './GroupPreview'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nexport function GroupList({ groups, onAddTask, onRemoveTask, onRemoveGroup, handleDragEnd, onUpdateTask, onUpdateGroup, activeBoard, loggedInUser }) {\r\n\r\n\r\n    return (\r\n        <section className=\"group-list\" >\r\n            <DragDropContext onDragEnd={handleDragEnd}>\r\n                <Droppable droppableId=\"groups\" type=\"group\" >\r\n                    {(provided) => (\r\n                        <div className=\"groups\" {...provided.droppableProps} ref={provided.innerRef} >\r\n                            {groups.map((group, index) => {\r\n                                return (\r\n                                    <Draggable key={group.id} draggableId={group.id} index={index}>\r\n                                        {(provided) => (\r\n                                            <div {...provided.draggableProps} ref={provided.innerRef}>\r\n                                                <GroupPreview\r\n                                                    onRemoveTask={onRemoveTask}\r\n                                                    onAddTask={onAddTask}\r\n                                                    group={group}\r\n                                                    onRemoveGroup={onRemoveGroup}\r\n                                                    onUpdateTask={onUpdateTask}\r\n                                                    onUpdateGroup={onUpdateGroup}\r\n                                                    handleDragEnd={handleDragEnd}\r\n                                                    provided={provided}\r\n                                                    activeBoard={activeBoard}\r\n                                                    loggedInUser={loggedInUser}\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                )\r\n                            })}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        </section>\r\n    )\r\n}\r\n\r\n","import { Component } from 'react'\r\n\r\nimport { Avatar } from '@material-ui/core';\r\n\r\nexport class FilterModal extends Component {\r\n    state = {\r\n        filterBy: {\r\n            groupName: '',\r\n            member: '',\r\n            status: '',\r\n            priority: '',\r\n            date: '',\r\n        }\r\n    }\r\n\r\n    filterGroup = (ev, field, value) => {\r\n        ev.stopPropagation();\r\n\r\n        var filterBy = { ...this.state.filterBy };\r\n        filterBy[field] = value;\r\n\r\n        this.setState({ filterBy }, () => {\r\n            this.props.getGroupsForDisplay(filterBy)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { activeBoard } = this.props\r\n        return (\r\n            <section className=\"filter-modal flex\">\r\n                <div className=\"column\">\r\n                    <h1>Group</h1>\r\n                    <ul className=\"list groups clean-list\">\r\n                        {activeBoard.groups.map(group => {\r\n                            return (\r\n                                <li\r\n                                    key={group.id}\r\n                                    onClick={(ev) => this.filterGroup(ev, 'groupName', group.name)}\r\n                                >\r\n                                    {group.name}\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"column\">\r\n                    <h1>Member</h1>\r\n                    <ul className=\"list clean-list member\">\r\n                        {activeBoard.members.map((member) => {\r\n                            return (\r\n                                <li\r\n                                    className=\"member-tab flex align-center\"\r\n                                    key={member._id}\r\n                                    onClick={(ev) => this.filterGroup(ev, 'member', member.fullname)}\r\n                                >\r\n                                    <Avatar\r\n                                        className=\"avatar\"\r\n                                        alt={`${member.fullname}`}\r\n                                        src={member.imgUrl}\r\n                                    />\r\n                                    <span className=\"member-name\">{member.fullname}</span>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"column\">\r\n                    <h1>Priority</h1>\r\n                    <ul className=\"list priorities clean-list\">\r\n                        {activeBoard.priority.map((priority, idx) => {\r\n                            return (\r\n                                <li\r\n                                    key={idx}\r\n                                    className=\"priority\"\r\n                                    style={{ background: priority.color }}\r\n                                    onClick={(ev) => this.filterGroup(ev, 'priority', priority.txt)}\r\n                                >\r\n                                    {priority.txt}\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"column\">\r\n                    <h1>Status</h1>\r\n                    <ul className=\"list statuses clean-list\">\r\n                        {activeBoard.status.map((status, idx) => {\r\n                            return (\r\n                                <li\r\n                                    key={idx}\r\n                                    className=\"status\"\r\n                                    style={{ background: status.color }}\r\n                                    onClick={(ev) => this.filterGroup(ev, 'status', status.txt)}\r\n                                >\r\n                                    {status.txt}\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"column\">\r\n                    <h1>Due Date</h1>\r\n                    <ul className=\"list dates clean-list\">\r\n                        <li onClick={(ev) => this.filterGroup(ev, 'date', 'today')}>Today</li>\r\n                        <li onClick={(ev) => this.filterGroup(ev, 'date', 'tomorrow')}>Tomorrow</li>\r\n                        <li onClick={(ev) => this.filterGroup(ev, 'date', 'this week')}>This Week</li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"column\">\r\n                    <h1>Passed Date</h1>\r\n                    <ul className=\"list dates clean-list\">\r\n                        <li onClick={(ev) => this.filterGroup(ev, 'date', 'all passed')}>All Passed</li>\r\n                        <li onClick={(ev) => this.filterGroup(ev, 'date', 'yesterday')}>Yesterday</li>\r\n                        <li onClick={(ev) => this.filterGroup(ev, 'date', 'last week')}>Last Week</li>\r\n                    </ul>\r\n                </div>\r\n            </section >\r\n        )\r\n    }\r\n}\r\n","import { Component } from 'react'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport { FilterModal } from './FilterModal'\r\n\r\n\r\nexport class GroupFilter extends Component {\r\n    state = {\r\n        filterBy: {\r\n            txt: ''\r\n        },\r\n        isSearching: false\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        var filterBy = { ...this.state.filterBy }\r\n        filterBy.txt = ev.target.value;\r\n        this.setState({ filterBy }, () => this.props.getGroupsForDisplay(filterBy))\r\n    }\r\n\r\n    toggleSearch = () => {\r\n        this.setState({ isSearching: !this.state.isSearching })\r\n    }\r\n    render() {\r\n        const { activeBoard, toggleFilter, isFilterShow, groups, getGroupsForDisplay } = this.props;\r\n        const { isSearching } = this.state;\r\n        return (\r\n            <div className=\"filter flex align-center\">\r\n                <div\r\n                    className={`btn-search flex align-center ${isSearching && 'searching'}`}\r\n                    onClick={this.toggleSearch}\r\n                    onBlur={() => { this.setState({ isSearching: false }) }}\r\n                    onKeyDown={(ev) => {\r\n                        if (ev.key === 'Enter') {\r\n                            this.setState({ isSearching: false })\r\n                        }\r\n                    }}\r\n                >\r\n                    <SearchIcon />\r\n                    <input\r\n                        className=\"input-search\"\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Search\"\r\n                    />\r\n                </div>\r\n                <button className=\"btn-filter flex center align-center\" onClick={toggleFilter}>\r\n                    {<FilterListIcon />} Filter\r\n                            {isFilterShow && <FilterModal activeBoard={activeBoard} groups={groups} getGroupsForDisplay={getGroupsForDisplay} />}\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadBoard, loadBoards, updateBoard, updateBoards } from '../../store/actions/boardAction'\r\nimport { updateUser, loginUser } from '../../store/actions/userAction'\r\n\r\nimport { AvatarGroup } from '@material-ui/lab';\r\nimport { Avatar } from '@material-ui/core';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport LibraryBooksOutlinedIcon from '@material-ui/icons/LibraryBooksOutlined';\r\n\r\nimport { GroupList } from '../group/GroupList'\r\nimport { taskService } from '../../services/taskService'\r\nimport { groupService } from '../../services/groupService'\r\nimport { socketService } from '../../services/socketService'\r\nimport { GroupFilter } from '../group/GroupFilter';\r\n\r\nexport class _BoardDetails extends Component {\r\n    state = {\r\n        isFilterShow: false,\r\n        groupsForDisplay: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadActiveBoard()\r\n        this.setUpListeners()\r\n        socketService.emit('chat topic', this.props.match.params.boardId)\r\n    }\r\n\r\n    setUpListeners = () => {\r\n        socketService.on('update board', () => {\r\n            this.loadActiveBoard()\r\n        })\r\n        socketService.on('update boards', () => {\r\n            this.props.loadBoards()\r\n            this.loadActiveBoard()\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.boardId !== this.props.match.params.boardId) {\r\n            socketService.emit('chat topic', this.props.match.params.boardId)\r\n            this.loadActiveBoard()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socketService.off('update board')\r\n        socketService.off('update boards')\r\n    }\r\n\r\n    loadActiveBoard = () => {\r\n        const { boardId } = this.props.match.params\r\n        this.props.loadBoard(boardId)\r\n    }\r\n\r\n    onRemoveTask = (taskId, group) => {\r\n        const { activeBoard } = this.props\r\n        const updatedBoard = taskService.remove(taskId, activeBoard, group)\r\n        this.props.updateBoard(updatedBoard)\r\n    }\r\n\r\n    onAddTask = (txt, groupId) => {\r\n        const { activeBoard } = this.props\r\n        const updatedBoard = taskService.add(txt, activeBoard, groupId)\r\n        this.props.updateBoard(updatedBoard)\r\n    }\r\n\r\n    onUpdateTask = (task, groupId) => {\r\n        const { activeBoard } = this.props\r\n        const updatedBoard = taskService.update(task, activeBoard, groupId)\r\n        this.props.updateBoard(updatedBoard)\r\n    }\r\n\r\n    onAddGroup = (groupName) => {\r\n        const { activeBoard } = this.props\r\n        const updatedBoard = groupService.add(groupName, activeBoard)\r\n        this.props.updateBoard(updatedBoard)\r\n    }\r\n\r\n    onUpdateGroup = (group) => {\r\n        const { activeBoard } = this.props\r\n        const updatedBoard = groupService.update(group, activeBoard)\r\n        this.props.updateBoard(updatedBoard)\r\n    }\r\n\r\n    onRemoveGroup = (ev, groupId) => {\r\n        ev.stopPropagation();\r\n        const { activeBoard } = this.props\r\n        const updatedBoard = groupService.remove(groupId, activeBoard)\r\n        this.props.updateBoard(updatedBoard)\r\n    }\r\n\r\n    onUpdateBoardName = (boardName) => {\r\n        const { activeBoard, boards } = this.props\r\n        const updatedBoard = { ...activeBoard }\r\n        updatedBoard.name = boardName\r\n        this.props.updateBoard(updatedBoard)\r\n        this.props.updateBoards(updatedBoard, boards)\r\n    }\r\n\r\n    onUpdateBoardDesc = (description) => {\r\n        const { activeBoard } = this.props\r\n        const updatedBoard = { ...activeBoard }\r\n        updatedBoard.desc = description\r\n        this.props.updateBoard(updatedBoard)\r\n    }\r\n\r\n    handleDragEnd = async (res) => {\r\n        const { source, destination, type } = res;\r\n        const { activeBoard } = this.props;\r\n        const updatedBoard = { ...activeBoard };\r\n        if (!destination) return;\r\n        if (destination.droppableId === source.droppableId\r\n            &&\r\n            destination.index === source.index) return;\r\n        if (type === 'group') {\r\n            const newGroups = this._reorder(activeBoard.groups, source.index, destination.index);\r\n            updatedBoard.groups = newGroups;\r\n        } else if (type === 'task') {\r\n            if (destination.droppableId === source.droppableId) {\r\n                var groupIdx = activeBoard.groups.findIndex(group => group.id === source.droppableId)\r\n                const newTasks = this._reorder(activeBoard.groups[groupIdx].tasks, source.index, destination.index);\r\n                updatedBoard.groups[groupIdx].tasks = newTasks;\r\n            } else if (destination.droppableId !== source.droppableId) {\r\n                const sourceGroup = source.droppableId;\r\n                const destinationGroup = destination.droppableId;\r\n                //remove task from source group\r\n                const sourceGroupIdx = activeBoard.groups.findIndex(group => group.id === sourceGroup)\r\n                const sourceGroupItems = Array.from(activeBoard.groups[sourceGroupIdx].tasks)\r\n                const [transferedItem] = sourceGroupItems.splice(source.index, 1);\r\n                //add task to destination group\r\n                const destinationGroupIdx = activeBoard.groups.findIndex(group => group.id === destinationGroup);\r\n                const destinationGroupItems = Array.from(activeBoard.groups[destinationGroupIdx].tasks);\r\n                destinationGroupItems.splice(destination.index, 0, transferedItem);\r\n                //update groups in data\r\n                updatedBoard.groups[sourceGroupIdx].tasks = sourceGroupItems;\r\n                updatedBoard.groups[destinationGroupIdx].tasks = destinationGroupItems;\r\n            }\r\n        }\r\n        await this.props.updateBoard(updatedBoard);\r\n    }\r\n\r\n    _reorder = (list, sourceIdx, destIdx) => {\r\n        const items = Array.from(list);\r\n        const [removedItem] = items.splice(sourceIdx, 1);\r\n        items.splice(destIdx, 0, removedItem);\r\n        return items;\r\n    }\r\n\r\n    toggleFilter = () => {\r\n        var { isFilterShow } = this.state\r\n        isFilterShow = !isFilterShow\r\n        this.setState({ isFilterShow })\r\n    }\r\n\r\n    getGroupsForDisplay = (filterBy) => {\r\n        const { groups } = this.props.activeBoard;\r\n        var { groupsForDisplay } = this.state\r\n\r\n        var updateGroups = JSON.parse(JSON.stringify(groups));\r\n        groupsForDisplay = []\r\n\r\n        if (!filterBy) return this.setState({ groupsForDisplay: null })\r\n\r\n        if (filterBy.txt) {\r\n            const regex = new RegExp(filterBy.txt, 'i')\r\n            updateGroups.forEach(group => {\r\n                if ((regex.test(group.name))) groupsForDisplay.push(group)\r\n                else {\r\n                    const tasks = group.tasks.filter(task => (regex.test(task.name)))\r\n                    if (tasks.length) {\r\n                        var newGroup = { ...group }\r\n                        newGroup.tasks = tasks\r\n                        groupsForDisplay.push(newGroup)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        if (filterBy.groupName) {\r\n            groupsForDisplay = updateGroups.filter(currGroup => currGroup.name === filterBy.groupName);\r\n        }\r\n\r\n        if (filterBy.member) {\r\n            groupsForDisplay = updateGroups.filter(currGroup => {\r\n                const tasks = []\r\n                currGroup.tasks.forEach(task => {\r\n                    if (task.members.some(member => member.fullname === filterBy.member)) tasks.push(task)\r\n                })\r\n                if (tasks.length) {\r\n                    currGroup.tasks = tasks;\r\n                    return currGroup;\r\n                }\r\n                return currGroup;\r\n            })\r\n        }\r\n\r\n        if (filterBy.status) {\r\n            groupsForDisplay = updateGroups.filter(currGroup => this._filterByType(currGroup, 'status', filterBy))\r\n        }\r\n\r\n        if (filterBy.priority) {\r\n            groupsForDisplay = updateGroups.filter(currGroup => this._filterByType(currGroup, 'priority', filterBy))\r\n        }\r\n        this.setState({ groupsForDisplay })\r\n    }\r\n\r\n    _filterByType = (group, type, filterBy) => {\r\n        const tasks = group.tasks.filter(task => task[type] === filterBy[type])\r\n        if (tasks.length) {\r\n            group.tasks = tasks\r\n            return group;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { activeBoard, loggedInUser } = this.props\r\n        const { groupsForDisplay } = this.state\r\n        if (!activeBoard) return <div>Looks Like This Board Does Not Exist...</div>\r\n        return (\r\n            <section className=\"board-details flex col\">\r\n                <div className=\"board-header-top-container flex col\">\r\n                    <div className=\"board-header-top-left flex\">\r\n                        <div\r\n                            className=\"board-name editable\"\r\n                            contentEditable=\"true\"\r\n                            onBlur={(ev) => {\r\n                                this.onUpdateBoardName(ev.target.innerText)\r\n                            }}\r\n                            suppressContentEditableWarning={true}\r\n                            onKeyDown={(ev) => {\r\n                                if (ev.key === 'Enter') {\r\n                                    ev.target.blur()\r\n                                }\r\n                            }}\r\n                        >\r\n                            {activeBoard.name}\r\n                        </div>\r\n                        <div className=\"board-header-top-right flex\">\r\n                            <span>\r\n                                <AvatarGroup max={3}>\r\n                                    {activeBoard.members.map((member) => {\r\n                                        return (\r\n                                            <Avatar\r\n                                                key={member._id}\r\n                                                className=\"avatar\"\r\n                                                alt={`${member.fullname}`}\r\n                                                src={member.imgUrl}\r\n                                            />\r\n                                        )\r\n                                    })}\r\n                                </AvatarGroup>\r\n                            </span>\r\n                            <span className=\"activities\">Activities/ 17</span>\r\n                            <LibraryBooksOutlinedIcon className=\"libary-icon\" />\r\n                            <MoreHorizIcon />\r\n                        </div>\r\n                    </div>\r\n                    <span\r\n                        className=\"board-desc editable\"\r\n                        contentEditable=\"true\"\r\n                        onBlur={(ev) => {\r\n                            this.onUpdateBoardDesc(ev.target.innerText)\r\n                        }}\r\n                        suppressContentEditableWarning={true}\r\n                        onKeyDown={(ev) => {\r\n                            if (ev.key === 'Enter') {\r\n                                ev.target.blur()\r\n                            }\r\n                        }}\r\n                    >\r\n                        {activeBoard.desc}\r\n                    </span>\r\n                    <div className=\"board-header-bottom-container flex space-between\">\r\n                        <div className=\"board-creator\">\r\n                            <span\r\n                                onClick={() => {\r\n                                    this.props.history.push(`/profile/${activeBoard.creator._id}`);\r\n                                }}>\r\n                                Created By: {activeBoard.creator.fullname}\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"bottom-right-container flex\">\r\n                            <button\r\n                                className=\"btn-add-group\"\r\n                                onClick={() => {\r\n                                    this.onAddGroup('new group')\r\n                                }}>\r\n                                New Group\r\n                            </button>\r\n                            <GroupFilter\r\n                                getGroupsForDisplay={this.getGroupsForDisplay}\r\n                                groups={(!groupsForDisplay || !groupsForDisplay.length) ? activeBoard.groups : groupsForDisplay}\r\n                                activeBoard={activeBoard}\r\n                                toggleFilter={this.toggleFilter}\r\n                                isFilterShow={this.state.isFilterShow} />\r\n                            <MoreHorizIcon />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {this.state.isFilterShow &&\r\n                    <div\r\n                        className=\"screen\"\r\n                        onClick={this.toggleFilter}\r\n                    />}\r\n                <GroupList\r\n                    groups={(!groupsForDisplay || !groupsForDisplay.length) ? activeBoard.groups : groupsForDisplay}\r\n                    onRemoveTask={this.onRemoveTask}\r\n                    onAddTask={this.onAddTask}\r\n                    onUpdateTask={this.onUpdateTask}\r\n                    onUpdateGroup={this.onUpdateGroup}\r\n                    onRemoveGroup={this.onRemoveGroup}\r\n                    handleDragEnd={this.handleDragEnd}\r\n                    activeBoard={activeBoard}\r\n                    loggedInUser={loggedInUser}\r\n                />\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapGlobalStateToProps = (state) => {\r\n    return {\r\n        activeBoard: state.boardReducer.activeBoard,\r\n        boards: state.boardReducer.boards,\r\n        loggedInUser: state.userReducer.loggedInUser\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n    loadBoards,\r\n    updateBoard,\r\n    updateBoards,\r\n    updateUser,\r\n    loginUser\r\n}\r\nexport const BoardDetails = connect(\r\n    mapGlobalStateToProps,\r\n    mapDispatchToProps\r\n)(_BoardDetails);","import { Component } from 'react'\r\nimport Input from '@material-ui/core/Input';\r\n\r\nexport class BoardFilter extends Component {\r\n    state = {\r\n        filterBy: {\r\n            txt: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        var filterBy = { ...this.state.filterBy }\r\n        filterBy.txt = ev.target.value;\r\n        this.setState({ filterBy }, () => {\r\n            this.props.getBoradsForDisplay(this.state.filterBy.txt);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { filterBy } = this.state\r\n        return (\r\n            <section className=\"board-filter\">\r\n                <Input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"search\"\r\n                    onChange={this.handleChange}\r\n                    value={filterBy.txt}>\r\n                </Input>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport StarBorderTwoToneIcon from '@material-ui/icons/StarBorderTwoTone';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\n\r\nexport function BoardSideNavModal({ board, onOpenModalDelete }) {\r\n   \r\n    return (\r\n        <div className=\"modal-side-nave flex col\">\r\n            <span className=\"btn-in-modal flex align-center\">\r\n                <EditOutlinedIcon />\r\n            Rename Board\r\n            </span>\r\n            <span className=\"btn-in-modal flex align-center\">\r\n                <StarBorderTwoToneIcon />\r\n                Add to Favorites\r\n            </span>\r\n            <span onClick={onOpenModalDelete} className=\"btn-in-modal flex align-center\">\r\n                <DeleteIcon />\r\n                    Delete Board</span>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport function DeleteModalBoard({ board, onRemove, onCloseModalDelete }) {\r\n\r\n    return (\r\n        < div className=\"modal-delete flex col space-between\" >\r\n            <div className=\"top\">\r\n                <p>Are you sure want to delete Board? \"{board.name}\"</p>\r\n            </div>\r\n            <div className=\"bottom flex align-center\">\r\n                <button className=\"btn-delete\" onClick={() => onRemove(board._id)}>Delete</button>\r\n                <button className=\"btn-go-back\" onClick={onCloseModalDelete}>Go Back</button>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","import { Link } from 'react-router-dom'\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport { Component } from 'react';\r\nimport { BoardSideNavModal } from './BoardSideNavModal';\r\nimport { DeleteModalBoard } from '../DeleteModalBoard';\r\n\r\nexport class BoardPreview extends Component {\r\n    state = {\r\n        isModalShown: false,\r\n        isModalDeleteShown: false\r\n    }\r\n\r\n    toggleModal = () => {\r\n        var { isModalShown } = this.state\r\n        this.setState({ isModalShown: !isModalShown })\r\n    }\r\n\r\n    onOpenModalDelete = () => {\r\n        var { isModalDeleteShown } = this.state\r\n        this.setState({ isModalDeleteShown: !isModalDeleteShown })\r\n    }\r\n\r\n    onCloseModalDelete = () => {\r\n        this.setState({ isModalDeleteShown: false, isModalShown: false })\r\n    }\r\n\r\n    render() {\r\n        const { board, onRemove } = this.props\r\n        return (\r\n            <section className=\"board-preview flex align-center\" >\r\n                <Link to={`/board/${board._id}`}>\r\n                    {board.name}\r\n                </Link>\r\n\r\n                <MoreHorizIcon\r\n                    className=\"more-icon\"\r\n                    onClick={this.toggleModal} />\r\n\r\n                {this.state.isModalShown &&\r\n                    <BoardSideNavModal\r\n                        board={board}\r\n                        onOpenModalDelete={this.onOpenModalDelete}\r\n                    />}\r\n\r\n                {this.state.isModalShown &&\r\n                    <div\r\n                        className=\"screen\"\r\n                        onClick={this.toggleModal}\r\n                    />}\r\n\r\n                {this.state.isModalDeleteShown &&\r\n                    <DeleteModalBoard\r\n                        board={board}\r\n                        onRemove={onRemove}\r\n                        onCloseModalDelete={this.onCloseModalDelete}\r\n                    />\r\n                }\r\n                {this.state.isModalDeleteShown &&\r\n                    <div\r\n                        className=\"dark-screen-nover \"\r\n                    />}\r\n            </section >\r\n        )\r\n\r\n    }\r\n}\r\n","import { BoardPreview } from \"./BoardPreview\";\r\n\r\nexport function BoardList({ boards, onRemove }) {\r\n    return (\r\n        <section className=\"board-list\">\r\n            {boards.map(board => {\r\n                return <BoardPreview\r\n                    key={board._id}\r\n                    board={board}\r\n                    onRemove={onRemove}\r\n                />\r\n            })}\r\n        </section>\r\n    )\r\n}\r\n\r\n","import { Component } from \"react\";\r\nimport { AddCircleOutlineRounded } from \"@material-ui/icons\";\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport { BoardFilter } from \"./BoardFilter\";\r\nimport { BoardList } from \"./BoardList\";\r\n\r\nexport class BoardSideNav extends Component {\r\n    state = {\r\n        isBarShown: false,\r\n        isInputShown: false,\r\n        nameNewBoard: ''\r\n    }\r\n\r\n    toggleShownBar = () => {\r\n        var { isBarShown } = this.state\r\n        isBarShown = !isBarShown\r\n        this.setState({ isBarShown })\r\n    }\r\n\r\n    toggleInput = () => {\r\n        const { isInputShown } = this.state\r\n        this.setState({ isInputShown: !isInputShown })\r\n\r\n    }\r\n\r\n    handelChange = (ev) => {\r\n        var nameNewBoard = { ...this.state.nameNewBoard }\r\n        nameNewBoard = ev.target.value\r\n        this.setState({ nameNewBoard })\r\n    }\r\n\r\n    addBoard = (ev) => {\r\n        ev.preventDefault()\r\n        const { onAdd } = this.props\r\n        const { nameNewBoard } = this.state\r\n        onAdd(nameNewBoard)\r\n        this.toggleInput()\r\n    }\r\n\r\n    render() {\r\n        const { boards, onRemove, getBoradsForDisplay } = this.props\r\n        return (\r\n            <section className={`${(this.state.isBarShown) ? `board-side-nav flex col` : `board-side-nav-close`}`}>\r\n                <div className=\"board-side-nav-top flex col align-start space-between\">\r\n                    <button\r\n                        className=\"btn-toggle-sidenav flex center align-center\"\r\n                        onClick={this.toggleShownBar}>\r\n                        {(this.state.isBarShown) ? <ArrowBackIosIcon className=\"arrow-back\" /> : <ArrowForwardIosIcon />}\r\n                    </button>\r\n                    <h2>My Boards:</h2>\r\n                    <button\r\n                        className=\"btn-add flex align-center\"\r\n                        onClick={this.toggleInput}>\r\n                        {/* onClick={() => onAdd('new board')}> */}\r\n                        <AddCircleOutlineRounded />\r\n                        Add\r\n                    </button>\r\n                    <button\r\n                        className=\"btn-filter flex align-center\">\r\n                        <FilterListIcon />\r\n                        Filter\r\n                    </button>\r\n                </div>\r\n                <div className=\"board-side-nav-bottom flex col\">\r\n                    <BoardFilter\r\n                        getBoradsForDisplay={getBoradsForDisplay}\r\n                    />\r\n                    <BoardList\r\n                        boards={boards}\r\n                        onRemove={onRemove}\r\n                    />\r\n                    {this.state.isInputShown &&\r\n                        <form onSubmit={(ev) => this.addBoard(ev)}>\r\n                            <input\r\n                                className=\"input-new-board\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter board name\"\r\n                                onChange={this.handelChange}\r\n                                autoFocus />\r\n                        </form>}\r\n\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","\r\nexport function NotificationPreview({ notification }) {\r\n    return (\r\n        <section className=\"noti-preview\">\r\n            <span>{notification.byUser.fullname}</span>\r\n            <span className=\"noti-content\">{notification.content}</span>\r\n        </section>\r\n    )\r\n}\r\n","import { NotificationPreview } from \"./NotificationPreview\"\r\n\r\nexport function NotificationList({ notifications }) {\r\n    return (\r\n        <section>\r\n            {notifications.map((notification, idx) => {\r\n                return (\r\n                    <NotificationPreview\r\n                        key={idx}\r\n                        notification={notification}\r\n                    />\r\n                )\r\n            })}\r\n        </section>\r\n    )\r\n}\r\n","import { Component } from \"react\";\r\nimport { NotificationList } from \"./NotificationList\";\r\n\r\nexport class NotificationModal extends Component {\r\n\r\n\r\n    render() {\r\n        const { notifications } = this.props\r\n        return (\r\n            <section className=\"noti-modal\">\r\n                <span className=\"noti-header\">notifications:</span>\r\n                <NotificationList notifications={notifications} />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.f06faa17.png\";","import { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../store/actions/userAction'\r\nimport { Avatar } from '@material-ui/core';\r\n\r\nimport {\r\n    NotificationsNone,\r\n    AppsOutlined,\r\n    ExitToAppOutlined,\r\n    EventNoteOutlined,\r\n    GitHub,\r\n    LinkedIn\r\n} from '@material-ui/icons';\r\nimport { NotificationModal } from './notification/NotificationModal';\r\nimport logo from \"../assets/styles/logo/logo.png\";\r\nimport MenuOutlinedIcon from '@material-ui/icons/MenuOutlined';\r\nimport { socketService } from '../services/socketService';\r\n\r\n\r\nclass _AppHeader extends Component {\r\n    state = {\r\n        isNotificationModalShown: false,\r\n        notifications: [],\r\n        isNewNotification: false,\r\n        isHamburgerOpen: false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        socketService.on('board add notification', (notification) => {\r\n            const copyNotifications = [...this.state.notifications, notification]\r\n            this.setState({ notifications: copyNotifications, isNewNotification: true })\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socketService.off('board add notification')\r\n    }\r\n\r\n\r\n\r\n    toggleShowModal = () => {\r\n        this.setState({ isNotificationModalShown: !this.state.isNotificationModalShown, isNewNotification: false })\r\n    }\r\n\r\n    toggleHamburger = () => {\r\n        var { isHamburgerOpen } = this.state\r\n        this.setState({ isHamburgerOpen: !isHamburgerOpen })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { isNotificationModalShown, notifications, isNewNotification, isHamburgerOpen } = this.state\r\n        const { logout, loggedInUser } = this.props\r\n        return (\r\n            <div className=\"header-main flex\">\r\n                <div className=\"tab-name\">Hi,{loggedInUser.fullname || 'Guest'}</div>\r\n                <div className=\"header-left-panel flex col\">\r\n                    <div className=\"header-left-logo\">\r\n                        <Link to=\"/\">\r\n                            <img src={logo} alt=\"Logo\" />\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"header-left-top flex col\">\r\n                        <Link className=\"header-item\" to=\"/board\" title=\"My Boards\"><AppsOutlined /></Link>\r\n                        <span title=\"Notifications\" className=\"notifications header-item\" onClick={this.toggleShowModal}>\r\n                            <NotificationsNone />\r\n                            {isNewNotification && <div className=\"new-notification\"></div>}\r\n\r\n                            {isNotificationModalShown &&\r\n                                <NotificationModal notifications={notifications} />}\r\n                        </span>\r\n                        {isNotificationModalShown && <div onClick={this.toggleShowModal} className=\"screen\"></div>}\r\n                    </div>\r\n                    <div\r\n                        className={`header-left-bottom flex col end ${!isHamburgerOpen && 'open'}`}>\r\n                        <span className=\"event-note header-item flex align-center\"><Link to=\"/myweek\" title=\"My week\"><EventNoteOutlined /></Link></span>\r\n                        <span className=\"person header-item flex align-center\">\r\n                            <Link to=\"/profile\" title=\"My profile\">\r\n                                <Avatar\r\n                                    className=\"avatar\"\r\n                                    alt={`${loggedInUser.fullname || 'G'} `}\r\n                                    src={loggedInUser.imgUrl || 'G'}\r\n                                />\r\n                            </Link>\r\n                        </span>\r\n                        <span className=\"exit-to-app header-item flex align-center\"><Link to=\"\" onClick={logout} title=\"Logout\"><ExitToAppOutlined /></Link></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"header-right-panel flex col\">\r\n                    <div className=\"header-right-top\"></div>\r\n                    <div className=\"header-right-middle flex col align-center\">\r\n                        <GitHub className=\"header-item\" />\r\n                        <LinkedIn className=\"header-item\" />\r\n                    </div>\r\n                    <div className=\"header-right-bottom\"></div>\r\n                </div>\r\n                <button className=\"hamburger\" onClick={this.toggleHamburger}><MenuOutlinedIcon className=\"hamburger\" /></button>\r\n                {isHamburgerOpen &&\r\n                    <div className=\"dark-screen-nover\" onClick={this.toggleHamburger}></div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapGlobalStateToProps = (state) => {\r\n    return {\r\n        loggedInUser: state.userReducer.loggedInUser\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    logout,\r\n\r\n\r\n}\r\n\r\nexport const AppHeader = connect(\r\n    mapGlobalStateToProps,\r\n    mapDispatchToProps\r\n)(_AppHeader);\r\n","import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nimport { loadBoards, removeBoard, addBoard, updateBoards } from '../store/actions/boardAction'\r\nimport { BoardDetails } from '../cmps/board/BoardDetails'\r\nimport { BoardSideNav } from '../cmps/board/BoardSideNav'\r\nimport { AppHeader } from '../cmps/AppHeader'\r\n\r\nclass _BoardApp extends Component {\r\n    state = {\r\n        boardsForDisplay: null,\r\n        isLoading: false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ isLoading: true })\r\n        setTimeout(async () => {\r\n            await this.loadBoards()\r\n            const { boards } = this.props\r\n            if (boards) {\r\n                this.setState({ isLoading: false })\r\n                this.props.history.push(`/board/${boards[1]._id}`)\r\n                return\r\n            }\r\n            if (!boards || !boards.length) {\r\n                return\r\n            }\r\n            this.setState({ isLoading: false })\r\n        }, 4000);\r\n    }\r\n\r\n    loadBoards = async () => {\r\n        await this.props.loadBoards()\r\n    }\r\n\r\n    onRemove = async (boardId) => {\r\n        const { boards } = this.props\r\n        this.props.history.push(`/board/${boards[1]._id}`)\r\n        await this.props.removeBoard(boardId)\r\n    }\r\n    onAdd = async (board) => {\r\n        await this.props.addBoard(board)\r\n    }\r\n\r\n    getBoradsForDisplay = async (filterBy) => {\r\n        let { boards } = this.props\r\n        const regex = new RegExp(filterBy, 'i')\r\n        boards = boards.filter(board => regex.test(board.name))\r\n        this.setState({ boardsForDisplay: boards })\r\n    }\r\n\r\n    render() {\r\n        const { boards } = this.props\r\n        const { boardsForDisplay } = this.state\r\n        if (this.state.isLoading) return (\r\n            <div className=\"loader-container flex center align-center\">\r\n                <video width=\"700\" height=\"700\" autoPlay loop preload=\"true\">\r\n                    <source src=\"loader.mp4\" type=\"video/mp4\"></source>\r\n                </video>\r\n            </div>\r\n        )\r\n        if (!boards) return <div>Loading no boards...</div>\r\n        return (\r\n            <section className=\"board-app flex\">\r\n                <AppHeader />\r\n                <section className=\"board-main flex\">\r\n                    <BoardSideNav\r\n                        boards={boardsForDisplay || boards}\r\n                        getBoradsForDisplay={this.getBoradsForDisplay}\r\n                        onRemove={this.onRemove}\r\n                        onAdd={this.onAdd}\r\n                    />\r\n                    <Switch>\r\n                        <Route path=\"/board/:boardId\" component={BoardDetails} />\r\n                    </Switch>\r\n                </section>\r\n\r\n            </section>\r\n        )\r\n    }\r\n}\r\nconst mapGlobalStateToProps = (state) => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        activeBoard: state.boardReducer.activeBoard,\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    removeBoard,\r\n    addBoard,\r\n    updateBoards\r\n}\r\n\r\nexport const BoardApp = connect(\r\n    mapGlobalStateToProps,\r\n    mapDispatchToProps\r\n)(_BoardApp);","import logo from '../assets/styles/logo/logo.png'\r\n\r\nimport { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadBoards } from '../store/actions/boardAction'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass _Home extends Component {\r\n\r\n    state = {\r\n        boards: null,\r\n        isLoading: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setLoader();\r\n    }\r\n\r\n    setLoader = async () => {\r\n        this.setState({ isLoading: true })\r\n        setTimeout(async () => {\r\n            this.setState({ isLoading: false })\r\n            await this.props.loadBoards()\r\n        }, 4000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState({ isLoading: false })\r\n    }\r\n    runDemo = () => {\r\n        let loggedinUser = {\r\n            isAdmin: false,\r\n            fullname: \"Guest Guestis\",\r\n            username: \"Guest\",\r\n            email: \"Guest@gmail.com\",\r\n            phoneNumber: \"0524735510\",\r\n            birthday: \"20/02/2000\",\r\n            company: \"Mister Bit.\",\r\n        }\r\n        sessionStorage.setItem('loggedinUser', JSON.stringify(loggedinUser))\r\n\r\n    }\r\n    render() {\r\n        if (this.state.isLoading) return (\r\n            <div className=\"loader-container flex center align-center\">\r\n                <video width=\"700\" height=\"700\" autoPlay loop preload=\"true\">\r\n                    <source src=\"loader.mp4\" type=\"video/mp4\"></source>\r\n                </video>\r\n            </div>\r\n        )\r\n        return (\r\n            <section className=\"home flex col\" >\r\n                <div className=\"home-header flex start align-center\">\r\n                    <Link to=\"/login\" title=\"Login\">Login</Link>\r\n                    <Link to=\"/\" title=\"Sign-Up\">Sign-Up</Link>\r\n                </div>\r\n                <div className=\"home-main flex\">\r\n                    <div className=\"first-panel flex col center align-start\">\r\n                        <h1>Join the future</h1>\r\n                        <p>\r\n                            The next step in multi-planning and productivity!\r\n                         <br />\r\n                            <span>Sheny</span> will help you keep track of hundreds of tasks.\r\n                        <br />\r\n                        An efficient way to manage your co-workers / employees.\r\n                        <br />\r\n                        Half the hassle, twice the fun.\r\n                    </p>\r\n                        <Link to=\"/board\" title=\"Demo\" onClick={this.runDemo}><button>Start Here!</button></Link>\r\n\r\n                    </div>\r\n                    <div className=\"second-panel\">\r\n                        <img src={logo} alt=\"Logo\" />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapGlobalStateToProps = (state) => {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards\r\n}\r\n\r\nexport const Home = connect(\r\n    mapGlobalStateToProps,\r\n    mapDispatchToProps\r\n)(_Home);\r\n","import { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nvar dateFormat = require('dateformat')\r\n\r\nexport class TaskToWeek extends Component {\r\n    state = {\r\n        board: {},\r\n        userActive: '',\r\n        userTasks: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { board, username } = this.props\r\n        this.setState({ board }, () => {\r\n            this.findTasksPerUser(username)\r\n        })\r\n    }\r\n\r\n    findTasksPerUser = (userId) => {\r\n        const { board } = this.state\r\n        const { groups } = board\r\n        const userTasks = []\r\n        groups.forEach(group => {\r\n            let tasks = group.tasks.filter(task => task.members.find(member => member._id === userId))\r\n            if (tasks.length) {\r\n                tasks = tasks.map(task => {\r\n                    task.groupName = group.name\r\n                    task.boardName = board.name\r\n                    return task;\r\n                })\r\n                userTasks.push(...tasks)\r\n            }\r\n        })\r\n        this.setState({ userTasks: userTasks })\r\n    }\r\n\r\n    changeDate = (date) => {\r\n        const startDate = dateFormat(date.startDate, \"dd-mm-yyyy\")\r\n        const endDate = dateFormat(date.endDate, \"dd-mm-yyyy\")\r\n        const localDate = `${startDate} / ${endDate}`\r\n        return localDate\r\n    }\r\n    render() {\r\n        const { board, userTasks } = this.state\r\n        return (\r\n            <div>\r\n                {userTasks.map(task => {\r\n                    return <div key={task.id} className=\"tasks-user flex space-between\">\r\n                        <div className=\"left flex col\">\r\n                            <span>{task.name}</span>\r\n                            <div>\r\n                                <Link to={`/board/${board._id}`}>{`At: ${task.boardName}`}</Link>\r\n                                {'>'}\r\n                                <Link to={`/board/${board._id}`}>{`${task.groupName}`}</Link>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"right flex\">\r\n                            {this.changeDate(task.dateRange)}\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { TaskToWeek } from \"./TaskToWeek\";\r\n\r\nexport function ListMyWeek({ boards, username }) {\r\n    return (\r\n        <div>\r\n            {boards.map(board => {\r\n                return <TaskToWeek key={board._id} board={board} username={username} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/calendar.5a3c2ae0.png\";","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Input from '@material-ui/core/Input'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport { loadBoards } from '../store/actions/boardAction'\r\nimport { AppHeader } from '../cmps/AppHeader'\r\nimport { ListMyWeek } from '../cmps/ListMyWeek'\r\nimport Calendar from '../assets/icons/calendar.png'\r\n\r\nexport class _MyWeek extends Component {\r\n    state = {\r\n        boardsForDisplay: null,\r\n        isTaskShown: true,\r\n        filterBy: {\r\n            txt: ''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.loadBoards()\r\n        const { boards } = this.props\r\n        if (!boards || !boards.length) {\r\n            return\r\n        }\r\n    }\r\n\r\n    loadBoards = () => {\r\n        this.props.loadBoards()\r\n    }\r\n\r\n    toggleTasksMode = () => {\r\n        this.setState({ isTaskShown: !this.state.isTaskShown })\r\n    }\r\n    handleChange = (ev) => {\r\n        var filterBy = { ...this.state.filterBy }\r\n        filterBy.txt = ev.target.value\r\n        this.setState({ filterBy })\r\n        this.getBoardsForDisplay()\r\n    }\r\n    getBoardsForDisplay = () => {\r\n        const { filterBy } = this.state\r\n        if (!filterBy) return this.setState({ boardForDisplay: null })\r\n    }\r\n\r\n    render() {\r\n        const { boards, loggedInUser } = this.props\r\n        const { isTaskShown } = this.state\r\n        return (\r\n            <React.Fragment>\r\n                <AppHeader />\r\n                <section className=\"my-week\">\r\n                    <div className=\"top flex space-around align-center\">\r\n                        <img src={Calendar} alt=\"\" />\r\n                        <h2>Hey {loggedInUser.username} ,You have 4 assignments this week</h2>\r\n                    </div>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        autoComplete=\"off\"\r\n                        placeholder=\"Search\"\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <div className=\"bottom\">\r\n                        <div className=\"flex space-between\">\r\n                            <p>Tasks For You:</p>\r\n                            <Button onClick={this.toggleTasksMode}>{(isTaskShown) ? 'Close tasks' : 'Open tasks'}</Button>\r\n                        </div>\r\n                        {isTaskShown && <ListMyWeek boards={boards} username={loggedInUser._id} />}\r\n                    </div>\r\n                </section>\r\n            </React.Fragment >\r\n        )\r\n    }\r\n}\r\nconst mapGlobalStateToProps = (state) => {\r\n    return {\r\n        loggedInUser: state.userReducer.loggedInUser,\r\n        boards: state.boardReducer.boards\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n\r\n}\r\n\r\nexport const MyWeek = connect(\r\n    mapGlobalStateToProps,\r\n    mapDispatchToProps\r\n)(_MyWeek);\r\n","import React, { Component } from 'react'\r\nimport { Person, Mail, Phone, Cake, Work } from '@material-ui/icons';\r\n\r\nimport { Avatar } from '@material-ui/core';\r\nimport { AppHeader } from '../cmps/AppHeader'\r\nimport { userService } from '../services/userService';\r\n\r\nexport class Profile extends Component {\r\n    state = {\r\n        user: {},\r\n        initials: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadUser()\r\n        this.getInitials('tak took')\r\n\r\n    }\r\n\r\n    loadUser = async () => {\r\n        const user = await userService.getLoggedinUser()\r\n        const initials = this.getInitials(user.fullname)\r\n        this.setState({ user, initials })\r\n    }\r\n\r\n    getInitials = (fullname) => {\r\n        const names = fullname.split(' ')\r\n        const initials = names[0].charAt(0) + names[1].charAt(0)\r\n        return initials.toUpperCase()\r\n    }\r\n\r\n\r\n    render() {\r\n        const { user, initials } = this.state\r\n        if (user === {}) return <div>Loading...</div>\r\n        return (\r\n            <React.Fragment>\r\n                <AppHeader />\r\n                <section className=\"profile flex col space-between\">\r\n                    <div className=\"profile-header flex col align-center\">\r\n                        <div>{initials}</div>\r\n                        <h1>{user.fullname}</h1>\r\n                    </div>\r\n\r\n                    <div className=\"profile-main flex space-between\">\r\n                        <div className=\"first-panel \">\r\n                            <h2>My Boards</h2>\r\n                            <ul className=\"boards-list clean-list\">\r\n                                <li>from board ⇒ task name </li>\r\n                                <li>from board ⇒ task name </li>\r\n                                <li>from board ⇒ task name </li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"second-panel \">\r\n                            <h2>My Tasks</h2>\r\n                            <ul className=\"tasks-list clean-list\">\r\n                                <li>from board ⇒ task name </li>\r\n                                <li>from board ⇒ task name </li>\r\n                                <li>from board ⇒ task name </li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"third-panel\">\r\n                            <Avatar\r\n                                className=\"avatar\"\r\n                                alt={`${user.fullname || 'G'} `}\r\n                                src={user.imgUrl || 'G'}\r\n                            />\r\n                            <ul className=\"clean-list\">\r\n                                <li><Person /><span>username:</span>{user.fullname}</li>\r\n                                <li><Mail /><span>email:</span>{user.email}</li>\r\n                                <li><Phone /><span>Phone:</span>{user.phoneNumber}</li>\r\n                                <li><Cake /><span>Birthday:</span>{user.birthday}</li>\r\n                                <li><Work /><span>Company:</span>{user.company} </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport Input from '@material-ui/core/Input'\r\nimport { login, signup, logout } from \"../store/actions/userAction\"\r\nimport { userService } from \"../services/userService\"\r\nimport { Button } from '@material-ui/core'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\r\nimport FacebookIcon from '@material-ui/icons/Facebook'\r\nimport { Link } from 'react-router-dom'\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\r\n\r\n\r\n\r\nclass _Login extends Component {\r\n    state = {\r\n        isNewUser: false,\r\n        msg: '',\r\n        loggedinUser: userService.getLoggedinUser(),\r\n        loginCred: {\r\n            username: '',\r\n            password: ''\r\n        },\r\n        signupCred: {\r\n            username: '',\r\n            password: '',\r\n            fullname: ''\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    loginHandleChange = (ev) => {\r\n        const { name, value } = ev.target\r\n        this.setState(prevState => ({\r\n            loginCred: {\r\n                ...prevState.loginCred,\r\n                [name]: value\r\n            }\r\n        }))\r\n    }\r\n\r\n    signupHandleChange = ev => {\r\n        const { name, value } = ev.target\r\n        this.setState(prevState => ({\r\n            signupCred: {\r\n                ...prevState.signupCred,\r\n                [name]: value\r\n            }\r\n        }))\r\n    }\r\n\r\n    doLogin = async ev => {\r\n        ev.preventDefault()\r\n        const { username, password } = this.state.loginCred\r\n        if (!username || !password) {\r\n            return this.setState({ msg: 'Please enter user/password' })\r\n        }\r\n        try {\r\n            const userCreds = { username, password }\r\n            const user = await this.props.login(userCreds)\r\n            if (user) {\r\n                this.setState({ loginCred: { username: '', password: '' } })\r\n                this.props.history.push('/board')\r\n\r\n            }\r\n        } catch (err) {\r\n            this.setState({ msg: 'Login failed, try again.' })\r\n        }\r\n    }\r\n\r\n    doSignup = async ev => {\r\n        ev.preventDefault()\r\n        const { username, password, fullname } = this.state.signupCred\r\n        if (!username || !password || !fullname) {\r\n            return this.setState({ msg: 'All inputs are required' })\r\n        }\r\n        const signupCreds = { username, password, fullname }\r\n        try {\r\n            this.props.signup(signupCreds)\r\n            this.setState({ signupCred: { username: '', password: '', fullname: '' } })\r\n            this.props.history.push('/board')\r\n        } catch {\r\n            this.setState({ msg: 'signup failed, try again.' })\r\n\r\n        }\r\n    }\r\n\r\n    newUser = (ev) => {\r\n        ev.preventDefault()\r\n        const lastAns = this.state.isNewUser\r\n        this.setState({ isNewUser: !lastAns })\r\n    }\r\n\r\n    render() {\r\n        let loginSection = (\r\n            <form className=\"login flex col\" onSubmit={this.doLogin}>\r\n                <h2>Login</h2>\r\n                <Input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    autoComplete=\"off\"\r\n                    value={this.state.loginCred.username}\r\n                    onChange={this.loginHandleChange}\r\n                    placeholder=\"Username\"\r\n                />\r\n                <Input\r\n                    id=\"standard-adornment-password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    autoComplete=\"off\"\r\n                    value={this.state.loginCred.password}\r\n                    onChange={this.loginHandleChange}\r\n                    placeholder=\"Password\"\r\n                />\r\n                <button className=\"btn-login\">Login</button>\r\n                <a href=\"\\login\" onClick={this.newUser}>Dont have a user? signup</a>\r\n                <Button color=\"primary\"><FacebookIcon className=\"face-icon\" />Login with Facebook</Button>\r\n\r\n            </form>\r\n        )\r\n        let signupSection = (\r\n            <form className=\"signup flex col\" onSubmit={this.doSignup}>\r\n                <h2>Signup</h2>\r\n                <Input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    autoComplete=\"off\"\r\n                    onChange={this.signupHandleChange}\r\n                    placeholder=\"Username*\"\r\n                />\r\n                <Input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"off\"\r\n                    onChange={this.signupHandleChange}\r\n                    placeholder=\"Password*\"\r\n                />\r\n                <Input\r\n                    type=\"text\"\r\n                    name=\"fullname\"\r\n                    autoComplete=\"off\"\r\n                    onChange={this.signupHandleChange}\r\n                    placeholder=\"Full name*\"\r\n                />\r\n                <Input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    autoComplete=\"off\"\r\n                    onChange={this.signupHandleChange}\r\n                    placeholder=\"Email*\"\r\n                />\r\n                <button className=\"btn-login\">Signup</button>\r\n                <a href=\"/\" onClick={this.newUser}> have a user? login</a>\r\n\r\n            </form>\r\n        )\r\n        const { isNewUser } = this.state\r\n        const { logout, loggedinUser } = this.props;\r\n        return (\r\n            <div className=\"login-page\">\r\n                <Link className=\"arrow-left\" data-title={'Back to Home'} to=\"/\"><ArrowBackIcon /></Link>\r\n                <section className=\"login-container\">\r\n                    <AccountCircleIcon />\r\n                    <p>{this.state.msg}</p>\r\n                    {loggedinUser && (\r\n                        <div>\r\n                            <h3>\r\n                                Are you sure you want to exit? {loggedinUser.fullname}\r\n                                <button className=\"btn-login\" onClick={logout}>Logout</button>\r\n                            </h3>\r\n                        </div>\r\n                    )}\r\n\r\n                    {!loggedinUser && !isNewUser && loginSection}\r\n                    {!loggedinUser && isNewUser && signupSection}\r\n\r\n\r\n                </section>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nconst mapGlobalStateToProps = (state) => {\r\n    return {\r\n        loggedinUser: state.userReducer.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    login,\r\n    signup,\r\n    logout\r\n}\r\n\r\nexport const Login = connect(mapGlobalStateToProps, mapDispatchToProps)(_Login)","import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom';\r\n\r\nimport { BoardApp } from './pages/BoardApp';\r\nimport { Home } from './pages/Home';\r\nimport { MyWeek } from './pages/MyWeek';\r\nimport { Profile } from './pages/Profile';\r\nimport { Login } from './pages/Login';\r\nimport { socketService } from './services/socketService';\r\n\r\nsocketService.setup()\r\n\r\n\r\nexport function App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App flex\">\r\n        <main className=\"flex\">\r\n          <Switch>\r\n            <Route path=\"/board\" component={BoardApp} />\r\n            <Route path=\"/myweek\" component={MyWeek} />\r\n            <Route path=\"/profile/:userId?\" component={Profile} />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/\" component={Home} />\r\n          </Switch>\r\n        </main>\r\n\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const initialState = {\r\n    activeBoard: null,\r\n    boards: []\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_BOARDS':\r\n            return { ...state, boards: action.boards };\r\n        case 'SET_BOARD':\r\n            return { ...state, activeBoard: action.board };\r\n        case 'REMOVE_BOARD':\r\n            return { ...state, boards: state.boards.filter(board => action.boardId !== board._id) };\r\n        case 'ADD_BOARD':\r\n            return { ...state, boards: [...state.boards, action.board] };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","\r\nlet localLoggedinUser = {\r\n    isAdmin: false,\r\n    fullname: \"Guest Guestis\",\r\n    username: \"Guest\",\r\n    email: \"Guest@gmail.com\",\r\n    phoneNumber: \"0524735510\",\r\n    birthday: \"20/02/2000\",\r\n    company: \"Mister Bit.\",\r\n}\r\n\r\nif (sessionStorage.loggedinUser) localLoggedinUser = JSON.parse(sessionStorage.loggedinUser)\r\n\r\nconst initialState = {\r\n    loggedInUser: localLoggedinUser,\r\n    users: []\r\n}\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return { ...state, loggedInUser: action.user }\r\n        case 'LOGOUT_USER':\r\n            return { ...state, loggedInUser: null }\r\n        case 'REMOVE_USER':\r\n            return {\r\n                ...state,\r\n                users: state.users.filter(user => user._id !== action.userId)\r\n            }\r\n        case 'SET_USERS':\r\n            return { ...state, users: action.users }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import thunk from 'redux-thunk';\r\nimport {\r\n    createStore,\r\n    applyMiddleware,\r\n    compose,\r\n    combineReducers\r\n} from 'redux';\r\n\r\nimport { boardReducer } from './reducers/boardReducer';\r\nimport { userReducer } from './reducers/userReducer';\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    boardReducer,\r\n    userReducer\r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/styles/global.scss';\r\nimport { App } from './App.jsx';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nserviceWorkerRegistration.unregister();"],"sourceRoot":""}